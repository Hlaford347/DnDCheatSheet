{"version":3,"sources":["components/layout/Navbar.js","components/pages/Home.js","context/character/characterContext.js","components/characters/CharacterItem.js","data/classes.js","data/races.js","components/characterDetails/abilities/AbilityScores.js","components/characterDetails/skills/SkillItem.js","components/characterDetails/skills/Skills.js","data/languages.js","components/characterDetails/CharacterDetails.js","components/characters/Characters.js","components/pages/Character.js","components/cheatSheet/SheetDetails.js","components/cheatSheet/players/Heart.js","components/cheatSheet/players/Shield.js","components/cheatSheet/players/PlayerItem.js","components/cheatSheet/players/Players.js","data/skills.js","components/cheatSheet/SkillsChart.js","components/cheatSheet/SavingThrows.js","components/cheatSheet/Languages.js","components/pages/CheatSheet.js","context/character/characterReducer.js","context/types.js","context/character/CharacterState.js","App.js","index.js"],"names":["Navbar","title","icon","AppBar","position","Toolbar","Button","component","RouterLink","to","defaultProps","Home","characterContext","createContext","CharacterItem","character","id","name","race","subrace","level","skills","role","useContext","CharacterContext","deleteCharacter","setCurrent","clearCurrent","useEffect","useState","open","setOpen","handleClose","Box","Grid","container","spacing","justify","item","xs","map","skill","proficient","color","variant","onClick","Dialog","onClose","aria-labelledby","aria-describedby","DialogTitle","DialogContent","DialogContentText","DialogActions","strength","dexterity","constitution","intelligence","wisdom","charisma","savingThrow","Human","Dragonborn","Dwarf","Elf","Gnome","Halfling","AbilityScores","handleChange","levels","classes","ability","index","FormControl","className","formControl","key","InputLabel","toLowerCase","Select","required","labelId","value","onChange","MenuItem","useStyle","makeStyles","listItem","borderBottom","backgroundColor","expert","SkillItem","handleButtonPress","ListItem","button","Skills","p","List","aria-label","useStyles","theme","margin","minWidth","selectEmpty","marginTop","languageControl","maxWidth","CharacterDetails","Array","from","x","i","races","Object","getOwnPropertyNames","Races","roles","Roles","forEach","push","subraces","setSubraces","getStyles","lang","that","fontWeight","languages","indexOf","addCharacter","current","updateCharacter","setChar","maxHP","armorClass","nameInvalid","setNameValid","raceInvalid","setRaceValid","levelInvalid","setLevelValid","roleInvalid","setRoleValid","hpInvalid","setHpValid","char","e","target","checkSkills","indexOfSkill","newSkills","currentSkill","filter","sk","console","log","md","FormGroup","TextField","error","label","length","type","multiple","Languages","style","preventDefault","skillToAdd","innerText","TabPanel","props","children","other","hidden","Typography","root","Characters","setValue","characters","countOfCharacters","entries","Tabs","newValue","scrollButtons","Tab","a11yProps","fontSize","Character","SheetDetails","colorsArray","chartData","labels","datasets","borderColor","data","createCharacterAbilityData","height","width","options","maintainAspectRatio","scale","ticks","suggestedMin","text","zIndex","marginLeft","heart","display","top","transform","content","borderRadius","left","Heart","border","shield","Shield","playerItem","padding","gridRow","PlayerItem","Paper","Players","abilityScore","createSkillValue","proficiency","getProficiencyValue","skillObj","skillListObj","SkillsList","abilityModifier","getAbilityModifier","Math","floor","PassiveSkills","rows","passivePerception","passiveInsight","passiveInvestigation","TableContainer","Table","size","TableHead","TableRow","TableCell","align","TableBody","row","scope","SkillsChart","createPassiveSkillValuesObject","suggestedMax","SavingThrows","getSavingThrowValue","Classes","cl","ab","createSavingThrowObject","savingThrowArr","createCharacterSavingThrowData","join","getRandomColor","o","round","r","random","chartCard","chartHeader","textAlign","CheatSheet","numberOfColors","generateColorArray","state","action","payload","CharacterState","useReducer","characterReducer","dispatch","Provider","uuid","createMuiTheme","palette","primary","blueGrey","secondary","orange","App","ThemeProvider","basename","process","exact","path","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c442bda0.chunk.js","sourcesContent":["import React, { Fragment } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport { AppBar, Toolbar, Button } from '@material-ui/core';\r\n\r\nconst Navbar = ({ title, icon }) => {\r\n  return (\r\n    <Fragment>\r\n      <AppBar position='static'>\r\n        <Toolbar>\r\n          <Button component={RouterLink} to='/'>\r\n            Home\r\n          </Button>\r\n          <Button component={RouterLink} to='/character'>\r\n            Characters\r\n          </Button>\r\n          <Button component={RouterLink} to='/cheatSheet'>\r\n            Cheat Sheet\r\n          </Button>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nNavbar.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  icon: PropTypes.string,\r\n};\r\n\r\nNavbar.defaultProps = {\r\n  title: 'Cheat Sheet',\r\n  icon: 'fas fa-digital-tachograph',\r\n};\r\n\r\nexport default Navbar;\r\n","import React from 'react';\r\n\r\nconst Home = () => {\r\n  return (\r\n    <div>\r\n      <h1>Home</h1>\r\n      <p>HashRouter Added</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import { createContext } from 'react';\r\n\r\nconst characterContext = createContext();\r\n\r\nexport default characterContext;\r\n","import React, { Fragment, useContext, useEffect, useState } from 'react';\r\nimport {\r\n  Box,\r\n  Grid,\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogTitle,\r\n} from '@material-ui/core/';\r\nimport PropTypes from 'prop-types';\r\nimport CharacterContext from '../../context/character/characterContext';\r\n\r\nconst CharacterItem = ({ character }) => {\r\n  const { id, name, race, subrace, level, skills, role } = character;\r\n\r\n  const characterContext = useContext(CharacterContext);\r\n\r\n  const { deleteCharacter, setCurrent, clearCurrent } = characterContext;\r\n\r\n  useEffect(() => {\r\n    setCurrent(character);\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  const removeCharacter = () => {\r\n    deleteCharacter(id);\r\n    clearCurrent();\r\n    handleClose();\r\n  };\r\n\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <Box>\r\n        <Grid container spacing={0} justify='space-between'>\r\n          <Grid item xs={2}>\r\n            <strong>{name}</strong>\r\n          </Grid>\r\n          <Grid item xs={2}>\r\n            Race: {subrace ? subrace : race}\r\n          </Grid>\r\n          <Grid item xs={2}>\r\n            Class: {role}\r\n          </Grid>\r\n          <Grid item xs={2}>\r\n            Level: {level}\r\n          </Grid>\r\n          <Grid item xs={2}>\r\n            {skills.map((skill) => {\r\n              if (skill.proficient) {\r\n                return skill.name + ', ';\r\n              }\r\n              return null;\r\n            })}\r\n          </Grid>\r\n          <Grid item>\r\n            <Button\r\n              color='secondary'\r\n              variant='contained'\r\n              onClick={handleClickOpen}\r\n            >\r\n              Delete\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </Box>\r\n      <Dialog\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby='alert-dialog-title'\r\n        aria-describedby='alert-dialog-description'\r\n      >\r\n        <DialogTitle id='alert-dialog-title'>{'Delete this user?'}</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id='alert-dialog-description'>\r\n            Are you sure that you want to delete this character? This action is\r\n            irreversible.\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color='primary'>\r\n            Close\r\n          </Button>\r\n          <Button onClick={removeCharacter} color='secondary'>\r\n            Delete Character\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nCharacterItem.propTypes = {\r\n  character: PropTypes.object.isRequired,\r\n};\r\n\r\nCharacterItem.defaultProps = {\r\n  character: {\r\n    id: 1,\r\n    name: '',\r\n    level: 0,\r\n    role: null,\r\n    skills: [],\r\n    strength: 10,\r\n    dexterity: 10,\r\n    constitution: 10,\r\n    intelligence: 10,\r\n    wisdom: 10,\r\n    charisma: 10,\r\n  },\r\n};\r\n\r\nexport default CharacterItem;\r\n","export default [\r\n  { name: 'Barbarian', savingThrow: ['strength', 'constitution'] },\r\n  { name: 'Bard', savingThrow: ['dexterity', 'charisma'] },\r\n  { name: 'Cleric', savingThrow: ['wisdom', 'charisma'] },\r\n  { name: 'Druid', savingThrow: ['intelligence', 'wisdom'] },\r\n  { name: 'Fighter', savingThrow: ['strength', 'constitution'] },\r\n  { name: 'Monk', savingThrow: ['strength', 'dexterity'] },\r\n  { name: 'Paladin', savingThrow: ['wisdom', 'charisma'] },\r\n  { name: 'Ranger', savingThrow: ['strength', 'dexterity'] },\r\n  { name: 'Rogue', savingThrow: ['dexterity', 'intelligence'] },\r\n  { name: 'Sorcerer', savingThrow: ['constitution', 'charisma'] },\r\n  { name: 'Warlock', savingThrow: ['wisdom', 'charisma'] },\r\n  { name: 'Wizard', savingThrow: ['intelligence', 'wisdom'] },\r\n  { name: 'Artificer', savingThrow: ['constitution', 'intelligence'] },\r\n];\r\n","export default {\r\n  Human: ['Human', 'Variant human'],\r\n  Dragonborn: [\r\n    'Black',\r\n    'Blue',\r\n    'Brass',\r\n    'Bronze',\r\n    'Copper',\r\n    'Gold',\r\n    'Green',\r\n    'Red',\r\n    'Silver',\r\n    'White',\r\n  ],\r\n  Dwarf: ['Hill dwarf', 'Mountain dwarf'],\r\n  Elf: ['High elf', 'Wood elf', 'Dark elf (Drow)'],\r\n  Gnome: ['Forest gnome', 'Rock gnome'],\r\n  'Half-elf': [],\r\n  'Half-orc': [],\r\n  Halfling: ['Lightfoot', 'Stout'],\r\n};\r\n","import React, { Fragment } from 'react';\r\nimport { FormControl, InputLabel, Select, MenuItem } from '@material-ui/core';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst AbilityScores = ({ handleChange, character, levels, classes }) => {\r\n  const abilitiesList = [\r\n    'Strength',\r\n    'Dexterity',\r\n    'Constitution',\r\n    'Intelligence',\r\n    'Wisdom',\r\n    'Charisma',\r\n  ];\r\n\r\n  const {\r\n    strength,\r\n    dexterity,\r\n    constitution,\r\n    intelligence,\r\n    wisdom,\r\n    charisma,\r\n  } = character;\r\n\r\n  return (\r\n    <Fragment>\r\n      {abilitiesList.map((ability, index) => {\r\n        return (\r\n          <FormControl className={classes.formControl} key={index}>\r\n            <InputLabel id={`${ability.toLowerCase()}-select-label`}>\r\n              {ability}\r\n            </InputLabel>\r\n            <Select\r\n              required\r\n              labelId={`${ability.toLowerCase()}-select-label`}\r\n              id={`${ability.toLowerCase()}-select`}\r\n              name={`${ability.toLowerCase()}`}\r\n              value={\r\n                ability === 'Strength'\r\n                  ? strength\r\n                  : ability === 'Dexterity'\r\n                  ? dexterity\r\n                  : ability === 'Constitution'\r\n                  ? constitution\r\n                  : ability === 'Intelligence'\r\n                  ? intelligence\r\n                  : ability === 'Wisdom'\r\n                  ? wisdom\r\n                  : charisma\r\n              }\r\n              onChange={handleChange}\r\n            >\r\n              {levels.map((level, index) => {\r\n                return (\r\n                  <MenuItem required key={index} value={level}>\r\n                    {level}\r\n                  </MenuItem>\r\n                );\r\n              })}\r\n            </Select>\r\n          </FormControl>\r\n        );\r\n      })}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nAbilityScores.propTypes = {\r\n  handleChange: PropTypes.func.isRequired,\r\n  character: PropTypes.object.isRequired,\r\n  levels: PropTypes.array.isRequired,\r\n  classes: PropTypes.object,\r\n};\r\n\r\nAbilityScores.defaultProps = {\r\n  handleChange: () => {},\r\n  character: {\r\n    id: 1,\r\n    name: '',\r\n    level: 0,\r\n    role: null,\r\n    skills: [],\r\n    strength: 10,\r\n    dexterity: 10,\r\n    constitution: 10,\r\n    intelligence: 10,\r\n    wisdom: 10,\r\n    charisma: 10,\r\n  },\r\n  levels: [],\r\n  classes: {},\r\n};\r\n\r\nexport default AbilityScores;\r\n","import React from 'react';\r\nimport { ListItem, makeStyles } from '@material-ui/core';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst useStyle = makeStyles({\r\n  listItem: {\r\n    borderBottom: '1px solid black',\r\n  },\r\n  proficient: {\r\n    backgroundColor: '#4dd0e1',\r\n  },\r\n  expert: {\r\n    backgroundColor: '#ffeb3b',\r\n  },\r\n});\r\n\r\nconst SkillItem = ({ skill, handleButtonPress }) => {\r\n  const classes = useStyle();\r\n\r\n  return (\r\n    <ListItem\r\n      button\r\n      onClick={handleButtonPress}\r\n      className={\r\n        classes.listItem +\r\n        ' ' +\r\n        (skill.proficient\r\n          ? classes.proficient\r\n          : skill.expert\r\n          ? classes.expert\r\n          : null)\r\n      }\r\n      name='skill'\r\n    >\r\n      {skill.name}\r\n    </ListItem>\r\n  );\r\n};\r\n\r\nSkillItem.propTypes = {\r\n  skill: PropTypes.object.isRequired,\r\n  handleButtonPress: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default SkillItem;\r\n","import React from 'react';\r\nimport SkillItem from './SkillItem';\r\nimport { Box, List } from '@material-ui/core';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Skills = ({ character, handleButtonPress }) => {\r\n  const { skills } = character;\r\n\r\n  return (\r\n    <Box>\r\n      <Box p={2}>\r\n        <List aria-label='main skills list'>\r\n          {skills.map((skill, index) => (\r\n            <SkillItem\r\n              key={index}\r\n              skill={skill}\r\n              handleButtonPress={handleButtonPress}\r\n              name='skills'\r\n            />\r\n          ))}\r\n        </List>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nSkills.propTypes = {\r\n  character: PropTypes.object.isRequired,\r\n  handleButtonPress: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Skills;\r\n","export default [\r\n  'Common',\r\n  'Dwarvish',\r\n  'Elvish',\r\n  'Giant',\r\n  'Gnomish',\r\n  'Goblin',\r\n  'Halfling',\r\n  'Orc',\r\n  'Abyssal',\r\n  'Celestial',\r\n  'Draconic',\r\n  'Deep Speech',\r\n  'Infernal',\r\n  'Primordial',\r\n  'Sylvan',\r\n  'Undercommon',\r\n  'Theives Cant',\r\n  'Druidic',\r\n  'Telepathy',\r\n  'Telepathy (Must share language)',\r\n  'Zemnian',\r\n  'Gith',\r\n];\r\n","import React, { useState, useContext, useEffect } from 'react';\r\nimport {\r\n  FormControl,\r\n  TextField,\r\n  InputLabel,\r\n  Select,\r\n  MenuItem,\r\n  FormGroup,\r\n  Button,\r\n  Box,\r\n  Grid,\r\n} from '@material-ui/core';\r\nimport Roles from '../../data/classes';\r\nimport Races from '../../data/races';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport CharacterContext from '../../context/character/characterContext';\r\nimport AbilityScores from './abilities/AbilityScores';\r\nimport Skills from './skills/Skills';\r\nimport Languages from '../../data/languages';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 120,\r\n  },\r\n  selectEmpty: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  languageControl: {\r\n    maxWidth: '100%',\r\n  },\r\n}));\r\n\r\nconst CharacterDetails = () => {\r\n  const levels = Array.from(new Array(20), (x, i) => i + 1);\r\n  const races = Object.getOwnPropertyNames(Races);\r\n  const roles = [];\r\n  Roles.forEach((role) => {\r\n    roles.push(role.name);\r\n  });\r\n\r\n  const [subraces, setSubraces] = useState([]);\r\n  const classes = useStyles();\r\n\r\n  function getStyles(lang, that) {\r\n    return {\r\n      fontWeight: languages.indexOf(lang) === -1 ? 400 : 600,\r\n    };\r\n  }\r\n\r\n  const characterContext = useContext(CharacterContext);\r\n\r\n  const {\r\n    addCharacter,\r\n    current,\r\n    updateCharacter,\r\n    setCurrent,\r\n  } = characterContext;\r\n\r\n  useEffect(() => {\r\n    if (current !== null) {\r\n      setChar(current);\r\n    } else {\r\n      setChar({\r\n        name: '',\r\n        race: '',\r\n        subrace: '',\r\n        level: '',\r\n        role: '',\r\n        skills: [\r\n          {\r\n            name: 'Acrobatics',\r\n            proficient: false,\r\n            expert: false,\r\n          },\r\n          {\r\n            name: 'Animal handling',\r\n            proficient: false,\r\n            expert: false,\r\n          },\r\n          {\r\n            name: 'Arcana',\r\n            proficient: false,\r\n            expert: false,\r\n          },\r\n          {\r\n            name: 'Athletics',\r\n            proficient: false,\r\n            expert: false,\r\n          },\r\n          {\r\n            name: 'Deception',\r\n            proficient: false,\r\n            expert: false,\r\n          },\r\n          {\r\n            name: 'History',\r\n            proficient: false,\r\n            expert: false,\r\n          },\r\n          {\r\n            name: 'Insight',\r\n            proficient: false,\r\n            expert: false,\r\n          },\r\n          {\r\n            name: 'Intimidation',\r\n            proficient: false,\r\n            expert: false,\r\n          },\r\n          {\r\n            name: 'Investigation',\r\n            proficient: false,\r\n            expert: false,\r\n          },\r\n          {\r\n            name: 'Medicine',\r\n            proficient: false,\r\n            expert: false,\r\n          },\r\n          {\r\n            name: 'Nature',\r\n            proficient: false,\r\n            expert: false,\r\n          },\r\n          {\r\n            name: 'Perception',\r\n            proficient: false,\r\n            expert: false,\r\n          },\r\n          {\r\n            name: 'Performance',\r\n            proficient: false,\r\n            expert: false,\r\n          },\r\n          {\r\n            name: 'Persuasion',\r\n            proficient: false,\r\n            expert: false,\r\n          },\r\n          {\r\n            name: 'Religion',\r\n            proficient: false,\r\n            expert: false,\r\n          },\r\n          {\r\n            name: 'Sleight of hand',\r\n            proficient: false,\r\n            expert: false,\r\n          },\r\n          {\r\n            name: 'Stealth',\r\n            proficient: false,\r\n            expert: false,\r\n          },\r\n          {\r\n            name: 'Survival',\r\n            proficient: false,\r\n            expert: false,\r\n          },\r\n        ],\r\n        strength: 10,\r\n        dexterity: 10,\r\n        constitution: 10,\r\n        intelligence: 10,\r\n        wisdom: 10,\r\n        charisma: 10,\r\n        maxHP: 8,\r\n        armorClass: 10,\r\n        languages: [],\r\n      });\r\n    }\r\n  }, [characterContext, current]);\r\n\r\n  const [nameInvalid, setNameValid] = useState(false);\r\n  const [raceInvalid, setRaceValid] = useState(false);\r\n  const [levelInvalid, setLevelValid] = useState(false);\r\n  const [roleInvalid, setRoleValid] = useState(false);\r\n  const [hpInvalid, setHpValid] = useState(false);\r\n\r\n  const [char, setChar] = useState({\r\n    name: '',\r\n    race: '',\r\n    subrace: '',\r\n    level: '',\r\n    role: '',\r\n    skills: [\r\n      {\r\n        name: 'Acrobatics',\r\n        proficient: false,\r\n        expert: false,\r\n      },\r\n      {\r\n        name: 'Animal handling',\r\n        proficient: false,\r\n        expert: false,\r\n      },\r\n      {\r\n        name: 'Arcana',\r\n        proficient: false,\r\n        expert: false,\r\n      },\r\n      {\r\n        name: 'Athletics',\r\n        proficient: false,\r\n        expert: false,\r\n      },\r\n      {\r\n        name: 'Deception',\r\n        proficient: false,\r\n        expert: false,\r\n      },\r\n      {\r\n        name: 'History',\r\n        proficient: false,\r\n        expert: false,\r\n      },\r\n      {\r\n        name: 'Insight',\r\n        proficient: false,\r\n        expert: false,\r\n      },\r\n      {\r\n        name: 'Intimidation',\r\n        proficient: false,\r\n        expert: false,\r\n      },\r\n      {\r\n        name: 'Investigation',\r\n        proficient: false,\r\n        expert: false,\r\n      },\r\n      {\r\n        name: 'Medicine',\r\n        proficient: false,\r\n        expert: false,\r\n      },\r\n      {\r\n        name: 'Nature',\r\n        proficient: false,\r\n        expert: false,\r\n      },\r\n      {\r\n        name: 'Perception',\r\n        proficient: false,\r\n        expert: false,\r\n      },\r\n      {\r\n        name: 'Performance',\r\n        proficient: false,\r\n        expert: false,\r\n      },\r\n      {\r\n        name: 'Persuasion',\r\n        proficient: false,\r\n        expert: false,\r\n      },\r\n      {\r\n        name: 'Religion',\r\n        proficient: false,\r\n        expert: false,\r\n      },\r\n      {\r\n        name: 'Sleight of hand',\r\n        proficient: false,\r\n        expert: false,\r\n      },\r\n      {\r\n        name: 'Stealth',\r\n        proficient: false,\r\n        expert: false,\r\n      },\r\n      {\r\n        name: 'Survival',\r\n        proficient: false,\r\n        expert: false,\r\n      },\r\n    ],\r\n    strength: 10,\r\n    dexterity: 10,\r\n    constitution: 10,\r\n    intelligence: 10,\r\n    wisdom: 10,\r\n    charisma: 10,\r\n    maxHP: 8,\r\n    armorClass: 10,\r\n    languages: [],\r\n  });\r\n\r\n  const {\r\n    name,\r\n    race,\r\n    subrace,\r\n    level,\r\n    role,\r\n    skills,\r\n    maxHP,\r\n    armorClass,\r\n    languages,\r\n  } = char;\r\n\r\n  const handleChange = (e) => {\r\n    setChar({ ...char, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleRaceChange = (e) => {\r\n    setSubraces(Races[e.target.value]);\r\n    setChar({ ...char, race: e.target.value, subrace: '' });\r\n  };\r\n\r\n  const handleValidation = () => {\r\n    setNameValid(name === '');\r\n    setRaceValid(race === '');\r\n    setLevelValid(level === '');\r\n    setRoleValid(role === '');\r\n    setHpValid(maxHP === '');\r\n  };\r\n\r\n  const handleButtonPress = (e) => {\r\n    // For changing skills on a player\r\n    const skillToAdd = e.target.innerText;\r\n    checkSkills(skillToAdd);\r\n  };\r\n\r\n  const checkSkills = (skill) => {\r\n    let newSkills = skills;\r\n    let indexOfSkill;\r\n    const currentSkill = newSkills.filter((sk, index) => {\r\n      if (sk.name === skill) {\r\n        indexOfSkill = index;\r\n      }\r\n      return sk.name === skill;\r\n    })[0];\r\n\r\n    if (!currentSkill.proficient && !currentSkill.expert) {\r\n      newSkills[indexOfSkill].proficient = true;\r\n    } else if (currentSkill.proficient) {\r\n      newSkills[indexOfSkill].expert = true;\r\n      newSkills[indexOfSkill].proficient = false;\r\n    } else {\r\n      newSkills[indexOfSkill].expert = false;\r\n    }\r\n\r\n    setChar({ ...char, skills: newSkills });\r\n    console.log(char);\r\n  };\r\n\r\n  const handleLanguage = (e) => {\r\n    setChar({ ...char, languages: e.target.value });\r\n  };\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    handleValidation();\r\n    if (\r\n      !(\r\n        name === '' ||\r\n        level === '' ||\r\n        role === '' ||\r\n        race === '' ||\r\n        maxHP === ''\r\n      )\r\n    ) {\r\n      if (current === null) {\r\n        addCharacter(char);\r\n      } else {\r\n        updateCharacter(char);\r\n      }\r\n    }\r\n    setCurrent(char);\r\n  };\r\n\r\n  return (\r\n    <Box p={2}>\r\n      <Grid container spacing={1}>\r\n        <Grid item xs={12} md={2}>\r\n          <FormGroup>\r\n            <FormControl className={classes.formControl}>\r\n              <TextField\r\n                required\r\n                error={nameInvalid}\r\n                id='name'\r\n                name='name'\r\n                label='Name'\r\n                onChange={handleChange}\r\n                value={name}\r\n              />\r\n            </FormControl>\r\n\r\n            <FormControl className={classes.formControl} error={raceInvalid}>\r\n              <InputLabel id='race-select-label'>Race</InputLabel>\r\n              <Select\r\n                required\r\n                labelId='race-select-label'\r\n                id='race-select'\r\n                name='race'\r\n                value={race}\r\n                onChange={handleRaceChange}\r\n              >\r\n                {races.map((race, index) => {\r\n                  return (\r\n                    <MenuItem key={index} value={race}>\r\n                      {race}\r\n                    </MenuItem>\r\n                  );\r\n                })}\r\n              </Select>\r\n            </FormControl>\r\n            {subraces.length > 0 && (\r\n              <FormControl className={classes.formControl}>\r\n                <InputLabel id='subrace-select-label'>Subrace</InputLabel>\r\n                <Select\r\n                  required\r\n                  labelId='subrace-select-label'\r\n                  id='subrace-select'\r\n                  name='subrace'\r\n                  value={subrace}\r\n                  onChange={handleChange}\r\n                >\r\n                  {subraces.map((subrace, index) => {\r\n                    return (\r\n                      <MenuItem key={index} value={subrace}>\r\n                        {subrace}\r\n                      </MenuItem>\r\n                    );\r\n                  })}\r\n                </Select>\r\n              </FormControl>\r\n            )}\r\n\r\n            <FormControl className={classes.formControl} error={levelInvalid}>\r\n              <InputLabel id='level-select-label'>Level</InputLabel>\r\n              <Select\r\n                required\r\n                labelId='level-select-label'\r\n                id='level-select'\r\n                name='level'\r\n                value={level}\r\n                onChange={handleChange}\r\n              >\r\n                {levels.map((level, index) => {\r\n                  return (\r\n                    <MenuItem key={index} value={level}>\r\n                      {level}\r\n                    </MenuItem>\r\n                  );\r\n                })}\r\n              </Select>\r\n            </FormControl>\r\n            <FormControl className={classes.formControl} error={roleInvalid}>\r\n              <InputLabel id='role-select-label'>Class</InputLabel>\r\n              <Select\r\n                required\r\n                labelId='role-select-label'\r\n                id='role-select'\r\n                name='role'\r\n                value={role}\r\n                onChange={handleChange}\r\n              >\r\n                {roles.map((role, index) => {\r\n                  return (\r\n                    <MenuItem key={index} value={role}>\r\n                      {role}\r\n                    </MenuItem>\r\n                  );\r\n                })}\r\n              </Select>\r\n            </FormControl>\r\n            <FormControl className={classes.formControl}>\r\n              <TextField\r\n                required\r\n                type='number'\r\n                error={hpInvalid}\r\n                id='maxHP'\r\n                name='maxHP'\r\n                label='Max HP'\r\n                onChange={handleChange}\r\n                value={maxHP}\r\n              />\r\n            </FormControl>\r\n            <FormControl className={classes.formControl}>\r\n              <TextField\r\n                type='number'\r\n                id='armorClass'\r\n                name='armorClass'\r\n                label='Armor Class'\r\n                onChange={handleChange}\r\n                value={armorClass}\r\n              />\r\n            </FormControl>\r\n            <FormControl\r\n              className={classes.formControl + ' ' + classes.languageControl}\r\n            >\r\n              <InputLabel id='languages-select-label'>Languages</InputLabel>\r\n              <Select\r\n                multiple\r\n                labelId='languages-select-label'\r\n                id='language-select'\r\n                name='languages'\r\n                value={languages}\r\n                onChange={handleLanguage}\r\n              >\r\n                {Languages.map((lang) => {\r\n                  return (\r\n                    <MenuItem\r\n                      key={lang}\r\n                      value={lang}\r\n                      style={getStyles(lang, this)}\r\n                    >\r\n                      {lang}\r\n                    </MenuItem>\r\n                  );\r\n                })}\r\n              </Select>\r\n            </FormControl>\r\n\r\n            <Button variant='contained' onClick={onSubmit}>\r\n              {current ? 'Save Edits' : 'Create New'}\r\n            </Button>\r\n          </FormGroup>\r\n        </Grid>\r\n        <Grid item xs={12} md={1}>\r\n          <AbilityScores\r\n            handleChange={handleChange}\r\n            character={char}\r\n            levels={levels}\r\n            classes={classes}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} md={2}>\r\n          <Skills character={char} handleButtonPress={handleButtonPress} />\r\n        </Grid>\r\n      </Grid>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default CharacterDetails;\r\n","import React, { Fragment, useContext, useState } from 'react';\r\nimport CharacterContext from '../../context/character/characterContext';\r\nimport CharacterItem from './CharacterItem';\r\nimport {\r\n  AppBar,\r\n  Tabs,\r\n  Tab,\r\n  Box,\r\n  Typography,\r\n  makeStyles,\r\n} from '@material-ui/core';\r\nimport PropTypes from 'prop-types';\r\nimport CharacterDetails from '../characterDetails/CharacterDetails';\r\n\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <div\r\n      role='tabpanel'\r\n      hidden={value !== index}\r\n      id={`nav-tabpanel-${index}`}\r\n      aria-labelledby={`nav-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && (\r\n        <Box p={3}>\r\n          <Typography component={'span'}>{children}</Typography>\r\n        </Box>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n  children: PropTypes.node,\r\n  index: PropTypes.any.isRequired,\r\n  value: PropTypes.any.isRequired,\r\n};\r\n\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `nav-tab-${index}`,\r\n    'aria-controls': `nav-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    backgroundColor: '#b0bec5',\r\n  },\r\n});\r\n\r\nconst Characters = () => {\r\n  const classes = useStyles();\r\n  const characterContext = useContext(CharacterContext);\r\n  const [value, setValue] = useState(1);\r\n\r\n  const { characters, clearCurrent, current } = characterContext;\r\n\r\n  const handleChange = (e, newValue) => {\r\n    if (newValue > countOfCharacters) {\r\n      clearCurrent();\r\n    }\r\n    setValue(newValue);\r\n  };\r\n\r\n  const countOfCharacters = Object.entries(characters).length;\r\n\r\n  return (\r\n    <Fragment>\r\n      <AppBar position='static' color='inherit' className={classes.root}>\r\n        <Tabs\r\n          onChange={handleChange}\r\n          aria-label='character names'\r\n          value={value}\r\n          variant='scrollable'\r\n          scrollButtons='auto'\r\n        >\r\n          {characters.map((character, index) => (\r\n            <Tab\r\n              key={character.id}\r\n              value={index + 1}\r\n              label={character.name}\r\n              {...a11yProps(index)}\r\n            />\r\n          ))}\r\n          <Tab value={countOfCharacters + 1} label='Add Character' />\r\n        </Tabs>\r\n      </AppBar>\r\n      {characters.map((character, index) => (\r\n        <TabPanel value={value} index={index + 1} key={character.id}>\r\n          <CharacterItem character={character} key={character.id} />\r\n          <CharacterDetails />\r\n        </TabPanel>\r\n      ))}\r\n      {current === null ? (\r\n        <TabPanel index={countOfCharacters + 1} value={value}>\r\n          <Box fontSize='h5.fontSize'>Add Character</Box>\r\n          <CharacterDetails />\r\n        </TabPanel>\r\n      ) : null}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Characters;\r\n","import React from 'react';\r\nimport Characters from '../characters/Characters';\r\n\r\nconst Character = () => {\r\n  return (\r\n    <div>\r\n      <Characters />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Character;\r\n","import React, { Fragment, useContext } from 'react';\r\nimport CharacterContext from '../../context/character/characterContext';\r\nimport { Radar } from 'react-chartjs-2';\r\n\r\nconst SheetDetails = ({ colorsArray }) => {\r\n  const characterContext = useContext(CharacterContext);\r\n\r\n  const { characters } = characterContext;\r\n\r\n  const chartData = {\r\n    labels: [\r\n      'Strength',\r\n      'Dexterity',\r\n      'Constitution',\r\n      'Intelligence',\r\n      'Wisdom',\r\n      'Charisma',\r\n    ],\r\n    datasets: [],\r\n  };\r\n\r\n  const createCharacterAbilityData = (character, index) => {\r\n    const dataObj = {\r\n      label: character.name,\r\n      backgroundColor: `${colorsArray[index]} 0.2)`,\r\n      borderColor: `${colorsArray[index]} 1)`,\r\n      data: [\r\n        character.strength,\r\n        character.dexterity,\r\n        character.constitution,\r\n        character.intelligence,\r\n        character.wisdom,\r\n        character.charisma,\r\n      ],\r\n    };\r\n\r\n    return dataObj;\r\n  };\r\n\r\n  characters.forEach((character, index) => {\r\n    chartData.datasets.push(createCharacterAbilityData(character, index));\r\n  });\r\n\r\n  return (\r\n    <Fragment>\r\n      <Fragment>\r\n        <Radar\r\n          data={chartData}\r\n          height={200}\r\n          width={200}\r\n          options={{\r\n            maintainAspectRatio: false,\r\n            scale: { ticks: { suggestedMin: 0 } },\r\n          }}\r\n        />\r\n      </Fragment>\r\n      <Fragment></Fragment>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default SheetDetails;\r\n","import React, { Fragment } from 'react';\r\nimport { makeStyles } from '@material-ui/styles';\r\n\r\nconst useStyles = makeStyles({\r\n  text: {\r\n    position: 'absolute',\r\n    zIndex: 3,\r\n    marginLeft: '16px',\r\n    marginTop: '7px',\r\n    color: '#fff',\r\n    fontSize: 14,\r\n    fontWeight: 'bold',\r\n  },\r\n  heart: {\r\n    backgroundColor: 'red',\r\n    display: 'inline-block',\r\n    height: '30px',\r\n    margin: '0 10px',\r\n    marginTop: '7px',\r\n    position: 'relative',\r\n    top: 0,\r\n    transform: 'rotate(-45deg)',\r\n    width: '30px',\r\n\r\n    '&::before': {\r\n      content: '\"\"',\r\n      backgroundColor: 'red',\r\n      borderRadius: '50%',\r\n      height: '30px',\r\n      position: 'absolute',\r\n      width: '30px',\r\n      top: '-15px',\r\n      left: 0,\r\n    },\r\n    '&::after': {\r\n      content: '\"\"',\r\n      backgroundColor: 'red',\r\n      borderRadius: '50%',\r\n      height: '30px',\r\n      position: 'absolute',\r\n      width: '30px',\r\n      left: '15px',\r\n      top: 0,\r\n    },\r\n  },\r\n});\r\n\r\nconst Heart = ({ maxHP }) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <Fragment>\r\n      <div className={classes.text}>{maxHP}</div>\r\n      <div className={classes.heart}></div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Heart;\r\n","import React, { Fragment } from 'react';\r\nimport { makeStyles } from '@material-ui/styles';\r\n\r\nconst useStyles = makeStyles({\r\n  text: {\r\n    position: 'absolute',\r\n    zIndex: 3,\r\n    marginLeft: '16px',\r\n    marginTop: '7px',\r\n    color: '#000',\r\n    fontSize: 14,\r\n    fontWeight: 'bold',\r\n    backgroundColor: '#fff',\r\n    border: '1px #ccc solid',\r\n  },\r\n  shield: { fontSize: 50, color: '#aaa', marginTop: '-5px' },\r\n});\r\n\r\nconst Shield = ({ armorClass }) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <Fragment>\r\n      <div className={classes.text}>{armorClass}</div>\r\n      <i className={'fas fa-shield-alt ' + classes.shield}></i>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Shield;\r\n","import React, { Fragment } from 'react';\r\nimport { Paper, Grid } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport PropTypes from 'prop-types';\r\nimport Heart from './Heart';\r\nimport Shield from './Shield';\r\n\r\nconst useStyles = makeStyles({\r\n  playerItem: {\r\n    padding: '1rem',\r\n    marginTop: '0.5rem',\r\n    fontSize: 12,\r\n    backgroundColor: '#fff',\r\n  },\r\n  gridRow: {\r\n    marginTop: '0.5rem',\r\n  },\r\n});\r\n\r\nconst PlayerItem = ({ character }) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <Fragment>\r\n      <Paper className={classes.playerItem}>\r\n        <Grid container>\r\n          <Grid container item xs={6} justify='space-between'>\r\n            <Grid item xs={6}>\r\n              <div>\r\n                <strong>{character.name}</strong>\r\n              </div>\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              Level: {character.level}\r\n            </Grid>\r\n            <Grid item xs={12} className={classes.gridRow}>\r\n              {character.subrace !== null ? character.subrace : character.race}{' '}\r\n              {character.role}\r\n            </Grid>\r\n          </Grid>\r\n          <Grid container item xs={6} justify='space-between'>\r\n            <Grid item xs={6}>\r\n              <Heart maxHP={character.maxHP} />\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <Shield armorClass={character.armorClass} />\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      </Paper>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nPlayerItem.propTypes = {\r\n  character: PropTypes.object.isRequired,\r\n};\r\n\r\nPlayerItem.defaultProps = {\r\n  character: {\r\n    id: 1,\r\n    name: '',\r\n    level: 0,\r\n    role: null,\r\n    skills: [],\r\n    strength: 10,\r\n    dexterity: 10,\r\n    constitution: 10,\r\n    intelligence: 10,\r\n    wisdom: 10,\r\n    charisma: 10,\r\n  },\r\n};\r\n\r\nexport default PlayerItem;\r\n","import React, { Fragment, useContext } from 'react';\r\nimport PlayerItem from './PlayerItem';\r\nimport CharacterContext from '../../../context/character/characterContext';\r\nimport { List } from '@material-ui/core';\r\n\r\nconst Players = () => {\r\n  const characterContext = useContext(CharacterContext);\r\n\r\n  const { characters } = characterContext;\r\n  return (\r\n    <Fragment>\r\n      <List>\r\n        {characters.map((character) => {\r\n          return <PlayerItem character={character} key={character.id} />;\r\n        })}\r\n      </List>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Players;\r\n","export default [\r\n  { name: 'Acrobatics', abilityScore: 'dexterity' },\r\n  { name: 'Animal handling', abilityScore: 'wisdom' },\r\n  { name: 'Arcana', abilityScore: 'intelligence' },\r\n  { name: 'Athletics', abilityScore: 'strength' },\r\n  { name: 'Deception', abilityScore: 'charisma' },\r\n  { name: 'History', abilityScore: 'intelligence' },\r\n  { name: 'Insight', abilityScore: 'wisdom' },\r\n  { name: 'Intimidation', abilityScore: 'charisma' },\r\n  { name: 'Investigation', abilityScore: 'intelligence' },\r\n  { name: 'Medicine', abilityScore: 'wisdom' },\r\n  { name: 'Nature', abilityScore: 'intelligence' },\r\n  { name: 'Perception', abilityScore: 'wisdom' },\r\n  { name: 'Performance', abilityScore: 'charisma' },\r\n  { name: 'Persuasion', abilityScore: 'charisma' },\r\n  { name: 'Religion', abilityScore: 'intelligence' },\r\n  { name: 'Sleight of hand', abilityScore: 'dexterity' },\r\n  { name: 'Stealth', abilityScore: 'dexterity' },\r\n  { name: 'Survival', abilityScore: 'wisdom' },\r\n];\r\n","import React, { useContext } from 'react';\r\nimport CharacterContext from '../../context/character/characterContext';\r\nimport { Radar } from 'react-chartjs-2';\r\nimport SkillsList from '../../data/skills';\r\nimport {\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  Paper,\r\n} from '@material-ui/core';\r\n\r\n// Generates Passive Skill Value\r\nconst createSkillValue = (character, skill) => {\r\n  const proficiency = getProficiencyValue(character.level);\r\n  const skillObj = character.skills.filter((sk) => {\r\n    return sk.name === skill;\r\n  });\r\n\r\n  const skillListObj = SkillsList.filter((sk) => {\r\n    return sk.name === skill;\r\n  });\r\n\r\n  const abilityModifier = getAbilityModifier(\r\n    character[skillListObj[0].abilityScore]\r\n  );\r\n\r\n  if (skillObj[0].proficient) {\r\n    return 10 + proficiency + abilityModifier;\r\n  } else if (skillObj[0].expert) {\r\n    return 10 + 2 * proficiency + abilityModifier;\r\n  } else {\r\n    return 10 + abilityModifier;\r\n  }\r\n};\r\n\r\n// Generates proficiency values based on the level input\r\nconst getProficiencyValue = (level) => {\r\n  return Math.floor((7 + level) / 4);\r\n};\r\n\r\n// Generates Ability Modifier values based on the ability score input\r\nconst getAbilityModifier = (abilityScore) => {\r\n  return Math.floor((abilityScore - 10) / 2);\r\n};\r\n\r\nconst SkillsChart = ({ colorsArray }) => {\r\n  const characterContext = useContext(CharacterContext);\r\n\r\n  const { characters } = characterContext;\r\n\r\n  const chartData = {\r\n    labels: [\r\n      'Acrobatics',\r\n      'Animal handling',\r\n      'Arcana',\r\n      'Athletics',\r\n      'Deception',\r\n      'History',\r\n      'Insight',\r\n      'Intimidation',\r\n      'Investigation',\r\n      'Medicine',\r\n      'Nature',\r\n      'Perception',\r\n      'Performance',\r\n      'Persuasion',\r\n      'Religion',\r\n      'Sleight of hand',\r\n      'Stealth',\r\n      'Survival',\r\n    ],\r\n    datasets: [],\r\n  };\r\n\r\n  const createPassiveSkillValuesObject = (character) => {\r\n    const skillObj = [];\r\n    chartData.labels.forEach((skill) => {\r\n      skillObj.push(createSkillValue(character, skill));\r\n    });\r\n    return skillObj;\r\n  };\r\n\r\n  const createCharacterAbilityData = (character, index) => {\r\n    const dataObj = {\r\n      label: character.name,\r\n      backgroundColor: `${colorsArray[index]} 0.2)`,\r\n      borderColor: `${colorsArray[index]} 1)`,\r\n      data: createPassiveSkillValuesObject(character),\r\n    };\r\n\r\n    return dataObj;\r\n  };\r\n\r\n  characters.forEach((character, index) => {\r\n    chartData.datasets.push(createCharacterAbilityData(character, index));\r\n  });\r\n\r\n  return (\r\n    <Radar\r\n      data={chartData}\r\n      height={200}\r\n      width={200}\r\n      options={{\r\n        maintainAspectRatio: false,\r\n        scale: { ticks: { suggestedMin: 0, suggestedMax: 20 } },\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport const PassiveSkills = () => {\r\n  const characterContext = useContext(CharacterContext);\r\n\r\n  const { characters } = characterContext;\r\n\r\n  const createData = (\r\n    name,\r\n    passivePerception,\r\n    passiveInsight,\r\n    passiveInvestigation\r\n  ) => {\r\n    return { name, passivePerception, passiveInsight, passiveInvestigation };\r\n  };\r\n\r\n  const rows = [];\r\n\r\n  characters.forEach((character) => {\r\n    rows.push(\r\n      createData(\r\n        character.name,\r\n        createSkillValue(character, 'Perception'),\r\n        createSkillValue(character, 'Insight'),\r\n        createSkillValue(character, 'Investigation')\r\n      )\r\n    );\r\n  });\r\n\r\n  return (\r\n    <TableContainer component={Paper}>\r\n      <Table size='small' aria-label='passive skill table'>\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell>Player Name</TableCell>\r\n            <TableCell align='left'>Perception</TableCell>\r\n            <TableCell align='left'>Insight</TableCell>\r\n            <TableCell align='left'>Investigation</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {rows.map((row) => {\r\n            return (\r\n              <TableRow key={row.name}>\r\n                <TableCell component='th' scope='row'>\r\n                  {row.name}\r\n                </TableCell>\r\n                <TableCell component='th' scope='row'>\r\n                  {row.passivePerception}\r\n                </TableCell>\r\n                <TableCell component='th' scope='row'>\r\n                  {row.passiveInsight}\r\n                </TableCell>\r\n                <TableCell component='th' scope='row'>\r\n                  {row.passiveInvestigation}\r\n                </TableCell>\r\n              </TableRow>\r\n            );\r\n          })}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n};\r\n\r\nexport default SkillsChart;\r\n","import React, { useContext, Fragment } from 'react';\r\nimport Classes from '../../data/classes';\r\nimport CharacterContext from '../../context/character/characterContext';\r\nimport { Radar } from 'react-chartjs-2';\r\n\r\nconst SavingThrows = ({ colorsArray }) => {\r\n  const characterContext = useContext(CharacterContext);\r\n\r\n  const { characters } = characterContext;\r\n\r\n  const chartData = {\r\n    labels: [\r\n      'Strength',\r\n      'Dexterity',\r\n      'Constitution',\r\n      'Intelligence',\r\n      'Wisdom',\r\n      'Charisma',\r\n    ],\r\n    datasets: [],\r\n  };\r\n\r\n  // Generates proficiency values based on the level input\r\n  const getProficiencyValue = (level) => {\r\n    return Math.floor((7 + level) / 4);\r\n  };\r\n\r\n  // Generates Ability Modifier values based on the ability score input\r\n  const getAbilityModifier = (abilityScore) => {\r\n    return Math.floor((abilityScore - 10) / 2);\r\n  };\r\n\r\n  const getSavingThrowValue = (character, ability) => {\r\n    const abilityModifier = getAbilityModifier(character[ability]);\r\n    const classObj = Classes.filter((cl) => {\r\n      return cl.name === character.role;\r\n    });\r\n\r\n    if (\r\n      classObj[0].savingThrow.filter((ab) => {\r\n        return ab === ability;\r\n      }).length > 0\r\n    ) {\r\n      return abilityModifier + getProficiencyValue(character.level);\r\n    } else {\r\n      return abilityModifier;\r\n    }\r\n  };\r\n\r\n  const createSavingThrowObject = (character) => {\r\n    const savingThrowArr = [];\r\n\r\n    chartData.labels.forEach((ab) => {\r\n      savingThrowArr.push(getSavingThrowValue(character, ab.toLowerCase()));\r\n    });\r\n\r\n    return savingThrowArr;\r\n  };\r\n\r\n  const createCharacterSavingThrowData = (character, index) => {\r\n    const dataObj = {\r\n      label: character.name,\r\n      backgroundColor: `${colorsArray[index]} 0.2)`,\r\n      borderColor: `${colorsArray[index]} 1)`,\r\n      data: createSavingThrowObject(character),\r\n    };\r\n\r\n    return dataObj;\r\n  };\r\n\r\n  characters.forEach((character, index) => {\r\n    chartData.datasets.push(createCharacterSavingThrowData(character, index));\r\n  });\r\n\r\n  return (\r\n    <Fragment>\r\n      <Radar\r\n        data={chartData}\r\n        height={200}\r\n        width={200}\r\n        options={{\r\n          maintainAspectRatio: false,\r\n          scale: { ticks: { suggestedMin: 0, suggestedMax: 10 } },\r\n        }}\r\n      />\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default SavingThrows;\r\n","import React, { useContext } from 'react';\r\nimport {\r\n  Table,\r\n  TableBody,\r\n  TableContainer,\r\n  TableCell,\r\n  TableHead,\r\n  TableRow,\r\n  Paper,\r\n} from '@material-ui/core';\r\nimport CharacterContext from '../../context/character/characterContext';\r\n\r\nconst Languages = () => {\r\n  const characterContext = useContext(CharacterContext);\r\n  const { characters } = characterContext;\r\n  const rows = [];\r\n  const createData = (name, languages) => {\r\n    return { name, languages };\r\n  };\r\n\r\n  characters.forEach((character) => {\r\n    rows.push(createData(character.name, character.languages.join(', ')));\r\n  });\r\n  return (\r\n    <TableContainer component={Paper}>\r\n      <Table size='small' aria-label='passive skill table'>\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell>Player Name</TableCell>\r\n            <TableCell align='left'>Languages</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {rows.map((row) => {\r\n            return (\r\n              <TableRow key={row.name}>\r\n                <TableCell component='th' scope='row'>\r\n                  {row.name}\r\n                </TableCell>\r\n                <TableCell component='th' scope='row'>\r\n                  {row.languages}\r\n                </TableCell>\r\n              </TableRow>\r\n            );\r\n          })}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n};\r\n\r\nexport default Languages;\r\n","import React, { Fragment } from 'react';\r\nimport SheetDetails from '../cheatSheet/SheetDetails';\r\nimport { Grid, Box, Paper } from '@material-ui/core';\r\nimport Players from '../cheatSheet/players/Players';\r\nimport SkillsChart, { PassiveSkills } from '../cheatSheet/SkillsChart';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport SavingThrows from '../cheatSheet/SavingThrows';\r\nimport Languages from '../cheatSheet/Languages';\r\n\r\nconst getRandomColor = () => {\r\n  const o = Math.round,\r\n    r = Math.random,\r\n    s = 255;\r\n  const color = `rgba(${o(r() * s)},${o(r() * s)},${o(r() * s)},`;\r\n  return color;\r\n};\r\n\r\nconst useStyles = makeStyles({\r\n  chartCard: {\r\n    marginTop: '0.5rem',\r\n    padding: '0.5rem',\r\n  },\r\n  gridRow: {\r\n    marginTop: '0.25rem',\r\n  },\r\n  chartHeader: {\r\n    textAlign: 'center',\r\n  },\r\n});\r\n\r\nconst CheatSheet = () => {\r\n  const classes = useStyles();\r\n\r\n  const colorsArray = [];\r\n\r\n  const generateColorArray = (numberOfColors) => {\r\n    for (let index = 0; index < numberOfColors; index++) {\r\n      colorsArray.push(getRandomColor());\r\n    }\r\n  };\r\n\r\n  generateColorArray(100);\r\n\r\n  return (\r\n    <Fragment>\r\n      <Box p={1}>\r\n        <Grid container spacing={2}>\r\n          <Grid item xs={12} md={2}>\r\n            <Players />\r\n          </Grid>\r\n          <Grid container item md={10} spacing={1} className={classes.gridRow}>\r\n            <Grid container item xs={12} spacing={1}>\r\n              <Grid item xs={12} md={4}>\r\n                <Paper className={classes.chartCard}>\r\n                  <h2 className={classes.chartHeader}>Passive Skills</h2>\r\n                  <PassiveSkills />\r\n                </Paper>\r\n              </Grid>\r\n              <Grid item xs={12} md={4}>\r\n                <Paper className={classes.chartCard}>\r\n                  <h2 className={classes.chartHeader}>Known Languages</h2>\r\n                  <Languages />\r\n                </Paper>\r\n              </Grid>\r\n            </Grid>\r\n            <Grid container item xs={12} spacing={1}>\r\n              <Grid item xs={12} md={4}>\r\n                <Paper className={classes.chartCard}>\r\n                  <h2 className={classes.chartHeader}>Ability Scores</h2>\r\n                  <SheetDetails colorsArray={colorsArray} />\r\n                </Paper>\r\n              </Grid>\r\n              <Grid item xs={12} md={4}>\r\n                <Paper className={classes.chartCard}>\r\n                  <h2 className={classes.chartHeader}>Skill Coverage</h2>\r\n                  <SkillsChart colorsArray={colorsArray} />\r\n                </Paper>\r\n              </Grid>\r\n              <Grid item xs={12} md={4}>\r\n                <Paper className={classes.chartCard}>\r\n                  <h2 className={classes.chartHeader}>Saving Throws</h2>\r\n                  <SavingThrows colorsArray={colorsArray} />\r\n                </Paper>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      </Box>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default CheatSheet;\r\n","import {\r\n  ADD_CHARACTER,\r\n  SET_CURRENT,\r\n  CLEAR_CURRENT,\r\n  UPDATE_CHARACTER,\r\n  DELETE_CHARACTER,\r\n} from '../types';\r\n\r\nexport default (state, action) => {\r\n  switch (action.type) {\r\n    case ADD_CHARACTER:\r\n      return {\r\n        ...state,\r\n        characters: [...state.characters, action.payload],\r\n      };\r\n    case UPDATE_CHARACTER:\r\n      return {\r\n        ...state,\r\n        characters: state.characters.map((character) =>\r\n          character.id === action.payload.id ? action.payload : character\r\n        ),\r\n      };\r\n    case DELETE_CHARACTER:\r\n      return {\r\n        ...state,\r\n        characters: state.characters.filter(\r\n          (character) => character.id !== action.payload\r\n        ),\r\n      };\r\n    case SET_CURRENT:\r\n      return { ...state, current: action.payload };\r\n    case CLEAR_CURRENT:\r\n      return { ...state, current: null };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","export const ADD_CHARACTER = 'ADD_CHARACTER';\r\nexport const SET_CURRENT = 'SET_CURRENT';\r\nexport const CLEAR_CURRENT = 'CLEAR_CURRENT';\r\nexport const UPDATE_CHARACTER = 'UPDATE_CHARACTER';\r\nexport const DELETE_CHARACTER = 'DELETE_CHARACTER';\r\nexport const SET_ALERT = 'SET_ALERT';\r\nexport const REMOVE_ALERT = 'REMOVE_ALERT';\r\n","import React, { useReducer } from 'react';\r\nimport CharacterContext from './characterContext';\r\nimport characterReducer from './characterReducer';\r\nimport {\r\n  ADD_CHARACTER,\r\n  SET_CURRENT,\r\n  CLEAR_CURRENT,\r\n  UPDATE_CHARACTER,\r\n  DELETE_CHARACTER,\r\n} from '../types';\r\nimport { uuid } from 'uuidv4';\r\n\r\nconst CharacterState = (props) => {\r\n  const initialState = {\r\n    characters: [\r\n      {\r\n        id: 1,\r\n        name: 'Player 1',\r\n        race: 'Dwarf',\r\n        subrace: 'Hill dwarf',\r\n        level: 2,\r\n        role: 'Fighter',\r\n        skills: [\r\n          {\r\n            name: 'Acrobatics',\r\n            proficient: true,\r\n            expert: false,\r\n          },\r\n          {\r\n            name: 'Animal handling',\r\n            proficient: false,\r\n            expert: false,\r\n          },\r\n          {\r\n            name: 'Arcana',\r\n            proficient: false,\r\n            expert: false,\r\n          },\r\n          {\r\n            name: 'Athletics',\r\n            proficient: true,\r\n            expert: false,\r\n          },\r\n          {\r\n            name: 'Deception',\r\n            proficient: false,\r\n            expert: false,\r\n          },\r\n          {\r\n            name: 'History',\r\n            proficient: false,\r\n            expert: false,\r\n          },\r\n          {\r\n            name: 'Insight',\r\n            proficient: false,\r\n            expert: false,\r\n          },\r\n          {\r\n            name: 'Intimidation',\r\n            proficient: false,\r\n            expert: false,\r\n          },\r\n          {\r\n            name: 'Investigation',\r\n            proficient: false,\r\n            expert: false,\r\n          },\r\n          {\r\n            name: 'Medicine',\r\n            proficient: false,\r\n            expert: false,\r\n          },\r\n          {\r\n            name: 'Nature',\r\n            proficient: false,\r\n            expert: false,\r\n          },\r\n          {\r\n            name: 'Perception',\r\n            proficient: false,\r\n            expert: false,\r\n          },\r\n          {\r\n            name: 'Performance',\r\n            proficient: false,\r\n            expert: false,\r\n          },\r\n          {\r\n            name: 'Persuasion',\r\n            proficient: false,\r\n            expert: false,\r\n          },\r\n          {\r\n            name: 'Religion',\r\n            proficient: false,\r\n            expert: false,\r\n          },\r\n          {\r\n            name: 'Sleight of hand',\r\n            proficient: false,\r\n            expert: false,\r\n          },\r\n          {\r\n            name: 'Stealth',\r\n            proficient: false,\r\n            expert: false,\r\n          },\r\n          {\r\n            name: 'Survival',\r\n            proficient: false,\r\n            expert: false,\r\n          },\r\n        ],\r\n        strength: 18,\r\n        dexterity: 14,\r\n        constitution: 16,\r\n        intelligence: 10,\r\n        wisdom: 8,\r\n        charisma: 12,\r\n        maxHP: 16,\r\n        armorClass: 18,\r\n        languages: ['Common'],\r\n      },\r\n      {\r\n        id: 2,\r\n        name: 'Player 2',\r\n        race: 'Gnome',\r\n        subrace: 'Rock gnome',\r\n        level: 3,\r\n        role: 'Ranger',\r\n        skills: [\r\n          {\r\n            name: 'Acrobatics',\r\n            proficient: false,\r\n            expert: false,\r\n          },\r\n          {\r\n            name: 'Animal handling',\r\n            proficient: true,\r\n            expert: false,\r\n          },\r\n          {\r\n            name: 'Arcana',\r\n            proficient: false,\r\n            expert: false,\r\n          },\r\n          {\r\n            name: 'Athletics',\r\n            proficient: false,\r\n            expert: false,\r\n          },\r\n          {\r\n            name: 'Deception',\r\n            proficient: false,\r\n            expert: false,\r\n          },\r\n          {\r\n            name: 'History',\r\n            proficient: false,\r\n            expert: false,\r\n          },\r\n          {\r\n            name: 'Insight',\r\n            proficient: false,\r\n            expert: false,\r\n          },\r\n          {\r\n            name: 'Intimidation',\r\n            proficient: false,\r\n            expert: false,\r\n          },\r\n          {\r\n            name: 'Investigation',\r\n            proficient: false,\r\n            expert: false,\r\n          },\r\n          {\r\n            name: 'Medicine',\r\n            proficient: false,\r\n            expert: false,\r\n          },\r\n          {\r\n            name: 'Nature',\r\n            proficient: false,\r\n            expert: false,\r\n          },\r\n          {\r\n            name: 'Perception',\r\n            proficient: true,\r\n            expert: false,\r\n          },\r\n          {\r\n            name: 'Performance',\r\n            proficient: false,\r\n            expert: false,\r\n          },\r\n          {\r\n            name: 'Persuasion',\r\n            proficient: false,\r\n            expert: false,\r\n          },\r\n          {\r\n            name: 'Religion',\r\n            proficient: false,\r\n            expert: false,\r\n          },\r\n          {\r\n            name: 'Sleight of hand',\r\n            proficient: false,\r\n            expert: false,\r\n          },\r\n          {\r\n            name: 'Stealth',\r\n            proficient: false,\r\n            expert: false,\r\n          },\r\n          {\r\n            name: 'Survival',\r\n            proficient: false,\r\n            expert: false,\r\n          },\r\n        ],\r\n        strength: 11,\r\n        dexterity: 17,\r\n        constitution: 12,\r\n        intelligence: 10,\r\n        wisdom: 14,\r\n        charisma: 10,\r\n        maxHP: 14,\r\n        armorClass: 16,\r\n        languages: ['Common'],\r\n      },\r\n      {\r\n        id: 3,\r\n        name: 'Player 3',\r\n        race: 'Elf',\r\n        subrace: 'Wood elf',\r\n        level: 2,\r\n        role: 'Druid',\r\n        skills: [\r\n          {\r\n            name: 'Acrobatics',\r\n            proficient: false,\r\n            expert: false,\r\n          },\r\n          {\r\n            name: 'Animal handling',\r\n            proficient: false,\r\n            expert: false,\r\n          },\r\n          {\r\n            name: 'Arcana',\r\n            proficient: true,\r\n            expert: false,\r\n          },\r\n          {\r\n            name: 'Athletics',\r\n            proficient: false,\r\n            expert: false,\r\n          },\r\n          {\r\n            name: 'Deception',\r\n            proficient: false,\r\n            expert: false,\r\n          },\r\n          {\r\n            name: 'History',\r\n            proficient: false,\r\n            expert: false,\r\n          },\r\n          {\r\n            name: 'Insight',\r\n            proficient: false,\r\n            expert: false,\r\n          },\r\n          {\r\n            name: 'Intimidation',\r\n            proficient: false,\r\n            expert: false,\r\n          },\r\n          {\r\n            name: 'Investigation',\r\n            proficient: false,\r\n            expert: false,\r\n          },\r\n          {\r\n            name: 'Medicine',\r\n            proficient: true,\r\n            expert: false,\r\n          },\r\n          {\r\n            name: 'Nature',\r\n            proficient: false,\r\n            expert: false,\r\n          },\r\n          {\r\n            name: 'Perception',\r\n            proficient: false,\r\n            expert: false,\r\n          },\r\n          {\r\n            name: 'Performance',\r\n            proficient: false,\r\n            expert: false,\r\n          },\r\n          {\r\n            name: 'Persuasion',\r\n            proficient: false,\r\n            expert: false,\r\n          },\r\n          {\r\n            name: 'Religion',\r\n            proficient: false,\r\n            expert: false,\r\n          },\r\n          {\r\n            name: 'Sleight of hand',\r\n            proficient: false,\r\n            expert: false,\r\n          },\r\n          {\r\n            name: 'Stealth',\r\n            proficient: false,\r\n            expert: false,\r\n          },\r\n          {\r\n            name: 'Survival',\r\n            proficient: false,\r\n            expert: false,\r\n          },\r\n        ],\r\n        strength: 8,\r\n        dexterity: 12,\r\n        constitution: 11,\r\n        intelligence: 15,\r\n        wisdom: 16,\r\n        charisma: 11,\r\n        maxHP: 12,\r\n        armorClass: 13,\r\n        languages: ['Common'],\r\n      },\r\n    ],\r\n    current: null,\r\n  };\r\n\r\n  const [state, dispatch] = useReducer(characterReducer, initialState);\r\n\r\n  // Add Character\r\n  const addCharacter = (character) => {\r\n    character.id = uuid();\r\n    dispatch({ type: ADD_CHARACTER, payload: character });\r\n  };\r\n\r\n  // Set Current Character\r\n  const setCurrent = (character) => {\r\n    dispatch({ type: SET_CURRENT, payload: character });\r\n  };\r\n\r\n  // Clear Current Character\r\n  const clearCurrent = () => {\r\n    dispatch({ type: CLEAR_CURRENT });\r\n  };\r\n\r\n  // Update Current Character\r\n  const updateCharacter = (character) => {\r\n    dispatch({ type: UPDATE_CHARACTER, payload: character });\r\n  };\r\n\r\n  // Delete Current Character\r\n  const deleteCharacter = (id) => {\r\n    dispatch({ type: DELETE_CHARACTER, payload: id });\r\n  };\r\n\r\n  return (\r\n    <CharacterContext.Provider\r\n      value={{\r\n        characters: state.characters,\r\n        current: state.current,\r\n        addCharacter,\r\n        updateCharacter,\r\n        deleteCharacter,\r\n        setCurrent,\r\n        clearCurrent,\r\n      }}\r\n    >\r\n      {props.children}\r\n    </CharacterContext.Provider>\r\n  );\r\n};\r\n\r\nexport default CharacterState;\r\n","import React, { Fragment, useEffect } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport Navbar from './components/layout/Navbar';\nimport Home from './components/pages/Home';\nimport Character from './components/pages/Character';\nimport CheatSheet from './components/pages/CheatSheet';\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core';\nimport { blueGrey, orange } from '@material-ui/core/colors/';\n\nimport CharacterState from './context/character/CharacterState';\n\nimport './App.css';\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: blueGrey,\n    secondary: orange,\n  },\n});\n\nconst App = () => {\n  useEffect(() => {});\n\n  return (\n    <ThemeProvider theme={theme}>\n      <CharacterState>\n        <Router basename={process.env.PUBLIC_URL}>\n          <Fragment>\n            <Navbar />\n            <div className='row'>\n              <Switch>\n                <Route exact path='/' component={Home} />\n                <Route exact path='/character' component={Character} />\n                <Route exact path='/cheatSheet' component={CheatSheet} />\n              </Switch>\n            </div>\n          </Fragment>\n        </Router>\n      </CharacterState>\n    </ThemeProvider>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}