{"version":3,"sources":["components/layout/Navbar.js","components/pages/Home.js","context/character/characterContext.js","components/characters/CharacterItem.js","data/classes.js","data/races.js","components/characterDetails/abilities/AbilityScores.js","components/characterDetails/skills/SkillItem.js","components/characterDetails/skills/Skills.js","components/characterDetails/CharacterDetails.js","components/characters/Characters.js","components/pages/Character.js","components/pages/CheatSheet.js","context/character/characterReducer.js","context/types.js","context/character/CharacterState.js","App.js","index.js"],"names":["Navbar","title","icon","AppBar","position","Toolbar","Button","component","RouterLink","to","defaultProps","Home","characterContext","createContext","CharacterItem","character","id","name","race","subrace","level","skills","role","useContext","CharacterContext","deleteCharacter","setCurrent","clearCurrent","useEffect","Box","Grid","container","spacing","justify","item","xs","map","skill","proficient","color","variant","onClick","strength","dexterity","constitution","intelligence","wisdom","charisma","Human","Dragonborn","Dwarf","Elf","Gnome","Halfling","AbilityScores","handleChange","levels","classes","ability","index","FormControl","className","formControl","key","InputLabel","toLowerCase","Select","required","labelId","value","onChange","MenuItem","useStyle","makeStyles","listItem","borderBottom","backgroundColor","expert","SkillItem","handleButtonPress","ListItem","button","Skills","p","List","aria-label","useStyles","theme","margin","minWidth","selectEmpty","marginTop","CharacterDetails","Array","from","x","i","races","Object","getOwnPropertyNames","Races","useState","subraces","setSubraces","addCharacter","current","updateCharacter","setChar","nameInvalid","setNameValid","raceInvalid","setRaceValid","levelInvalid","setLevelValid","roleInvalid","setRoleValid","char","e","target","console","log","checkSkills","indexOfSkill","newSkills","currentSkill","filter","sk","md","FormGroup","TextField","error","label","length","Roles","preventDefault","skillToAdd","innerText","TabPanel","props","children","other","hidden","aria-labelledby","Typography","root","Characters","setValue","characters","countOfCharacters","entries","Tabs","newValue","scrollButtons","Tab","a11yProps","fontSize","Character","CheatSheet","state","action","type","payload","CharacterState","useReducer","characterReducer","dispatch","Provider","uuid","createMuiTheme","palette","primary","blueGrey","secondary","orange","App","ThemeProvider","exact","path","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5654c49d.chunk.js","sourcesContent":["import React, { Fragment } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport { AppBar, Toolbar, Button } from '@material-ui/core';\r\n\r\nconst Navbar = ({ title, icon }) => {\r\n  return (\r\n    <Fragment>\r\n      <AppBar position='static'>\r\n        <Toolbar>\r\n          <Button component={RouterLink} to='/'>\r\n            Home\r\n          </Button>\r\n          <Button component={RouterLink} to='/character'>\r\n            Characters\r\n          </Button>\r\n          <Button component={RouterLink} to='/cheatSheet'>\r\n            Cheat Sheet\r\n          </Button>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nNavbar.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  icon: PropTypes.string,\r\n};\r\n\r\nNavbar.defaultProps = {\r\n  title: 'Cheat Sheet',\r\n  icon: 'fas fa-digital-tachograph',\r\n};\r\n\r\nexport default Navbar;\r\n","import React from 'react';\r\n\r\nconst Home = () => {\r\n  return (\r\n    <div>\r\n      <h1>Home</h1>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import { createContext } from 'react';\r\n\r\nconst characterContext = createContext();\r\n\r\nexport default characterContext;\r\n","import React, { Fragment, useContext, useEffect } from 'react';\r\nimport { Box, Grid, Button } from '@material-ui/core/';\r\nimport PropTypes from 'prop-types';\r\nimport CharacterContext from '../../context/character/characterContext';\r\n\r\nconst CharacterItem = ({ character }) => {\r\n  const { id, name, race, subrace, level, skills, role } = character;\r\n\r\n  const characterContext = useContext(CharacterContext);\r\n\r\n  const { deleteCharacter, setCurrent, clearCurrent } = characterContext;\r\n\r\n  useEffect(() => {\r\n    setCurrent(character);\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  const removeCharacter = () => {\r\n    deleteCharacter(id);\r\n    clearCurrent();\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <Box>\r\n        <Grid container spacing={0} justify='space-between'>\r\n          <Grid item xs={2}>\r\n            <strong>{name}</strong>\r\n          </Grid>\r\n          <Grid item xs={2}>\r\n            Race: {subrace ? subrace : race}\r\n          </Grid>\r\n          <Grid item xs={2}>\r\n            Class: {role}\r\n          </Grid>\r\n          <Grid item xs={2}>\r\n            Level: {level}\r\n          </Grid>\r\n          <Grid item xs={2}>\r\n            {skills.map((skill) => {\r\n              if (skill.proficient) {\r\n                return skill.name + ', ';\r\n              }\r\n              return null;\r\n            })}\r\n          </Grid>\r\n          <Grid item>\r\n            <Button\r\n              color='secondary'\r\n              variant='contained'\r\n              onClick={removeCharacter}\r\n            >\r\n              Delete\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </Box>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nCharacterItem.propTypes = {\r\n  character: PropTypes.object.isRequired,\r\n};\r\n\r\nCharacterItem.defaultProps = {\r\n  character: {\r\n    id: 1,\r\n    name: '',\r\n    level: 0,\r\n    role: null,\r\n    skills: [],\r\n    strength: 10,\r\n    dexterity: 10,\r\n    constitution: 10,\r\n    intelligence: 10,\r\n    wisdom: 10,\r\n    charisma: 10,\r\n  },\r\n};\r\n\r\nexport default CharacterItem;\r\n","/*export default Object.freeze({\r\n  BARBARIAN: { name: 'Barbarian' },\r\n  BARD: { name: 'Bard' },\r\n  CLERIC: { name: 'Cleric' },\r\n  DRUID: { name: 'Druid' },\r\n  FIGHTER: { name: 'Fighter' },\r\n  MONK: { name: 'Monk' },\r\n  PALADIN: { name: 'Paladin' },\r\n  RANGER: { name: 'Ranger' },\r\n  ROGUE: { name: 'Rogue' },\r\n  SORCERER: { name: 'Sorcerer' },\r\n  WARLOCK: { name: 'Warlock' },\r\n  WIZARD: { name: 'Wizard' },\r\n  ARTIFICER: { name: 'Artificer' },\r\n});*/\r\n\r\nexport default [\r\n  'Barbarian',\r\n  'Bard',\r\n  'Cleric',\r\n  'Druid',\r\n  'Fighter',\r\n  'Monk',\r\n  'Paladin',\r\n  'Ranger',\r\n  'Rogue',\r\n  'Sorcerer',\r\n  'Warlock',\r\n  'Wizard',\r\n  'Artificer',\r\n];\r\n","export default {\r\n  Human: ['Human', 'Variant human'],\r\n  Dragonborn: [\r\n    'Black',\r\n    'Blue',\r\n    'Brass',\r\n    'Bronze',\r\n    'Copper',\r\n    'Gold',\r\n    'Green',\r\n    'Red',\r\n    'Silver',\r\n    'White',\r\n  ],\r\n  Dwarf: ['Hill dwarf', 'Mountain dwarf'],\r\n  Elf: ['High elf', 'Wood elf', 'Dark elf (Drow)'],\r\n  Gnome: ['Forest gnome', 'Rock gnome'],\r\n  'Half-elf': [],\r\n  'Half-orc': [],\r\n  Halfling: ['Lightfoot', 'Stout'],\r\n};\r\n","import React, { Fragment } from 'react';\r\nimport { FormControl, InputLabel, Select, MenuItem } from '@material-ui/core';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst AbilityScores = ({ handleChange, character, levels, classes }) => {\r\n  const abilitiesList = [\r\n    'Strength',\r\n    'Dexterity',\r\n    'Constitution',\r\n    'Intelligence',\r\n    'Wisdom',\r\n    'Charisma',\r\n  ];\r\n\r\n  const {\r\n    strength,\r\n    dexterity,\r\n    constitution,\r\n    intelligence,\r\n    wisdom,\r\n    charisma,\r\n  } = character;\r\n\r\n  return (\r\n    <Fragment>\r\n      {abilitiesList.map((ability, index) => {\r\n        return (\r\n          <FormControl className={classes.formControl} key={index}>\r\n            <InputLabel id={`${ability.toLowerCase()}-select-label`}>\r\n              {ability}\r\n            </InputLabel>\r\n            <Select\r\n              required\r\n              labelId={`${ability.toLowerCase()}-select-label`}\r\n              id={`${ability.toLowerCase()}-select`}\r\n              name={`${ability.toLowerCase()}`}\r\n              value={\r\n                ability === 'Strength'\r\n                  ? strength\r\n                  : ability === 'Dexterity'\r\n                  ? dexterity\r\n                  : ability === 'Constitution'\r\n                  ? constitution\r\n                  : ability === 'Intelligence'\r\n                  ? intelligence\r\n                  : ability === 'Wisdom'\r\n                  ? wisdom\r\n                  : charisma\r\n              }\r\n              onChange={handleChange}\r\n            >\r\n              {levels.map((level, index) => {\r\n                return (\r\n                  <MenuItem required key={index} value={level}>\r\n                    {level}\r\n                  </MenuItem>\r\n                );\r\n              })}\r\n            </Select>\r\n          </FormControl>\r\n        );\r\n      })}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nAbilityScores.propTypes = {\r\n  handleChange: PropTypes.func.isRequired,\r\n  character: PropTypes.object.isRequired,\r\n  levels: PropTypes.array.isRequired,\r\n  classes: PropTypes.object,\r\n};\r\n\r\nAbilityScores.defaultProps = {\r\n  handleChange: () => {},\r\n  character: {\r\n    id: 1,\r\n    name: '',\r\n    level: 0,\r\n    role: null,\r\n    skills: [],\r\n    strength: 10,\r\n    dexterity: 10,\r\n    constitution: 10,\r\n    intelligence: 10,\r\n    wisdom: 10,\r\n    charisma: 10,\r\n  },\r\n  levels: [],\r\n  classes: {},\r\n};\r\n\r\nexport default AbilityScores;\r\n","import React, { useState } from 'react';\r\nimport { ListItem, makeStyles } from '@material-ui/core';\r\n\r\nconst useStyle = makeStyles({\r\n  listItem: {\r\n    borderBottom: '1px solid black',\r\n  },\r\n  proficient: {\r\n    backgroundColor: '#4dd0e1',\r\n  },\r\n  expert: {\r\n    backgroundColor: '#ffeb3b',\r\n  },\r\n});\r\n\r\nconst SkillItem = ({ skill, handleButtonPress }) => {\r\n  const classes = useStyle();\r\n\r\n  return (\r\n    <ListItem\r\n      button\r\n      onClick={handleButtonPress}\r\n      className={\r\n        classes.listItem +\r\n        ' ' +\r\n        (skill.proficient\r\n          ? classes.proficient\r\n          : skill.expert\r\n          ? classes.expert\r\n          : null)\r\n      }\r\n      name='skill'\r\n    >\r\n      {skill.name}\r\n    </ListItem>\r\n  );\r\n};\r\n\r\nexport default SkillItem;\r\n","import React from 'react';\r\nimport SkillItem from './SkillItem';\r\nimport { Box, List } from '@material-ui/core';\r\n\r\nconst Skills = ({ character, handleButtonPress }) => {\r\n  const { skills } = character;\r\n\r\n  return (\r\n    <Box>\r\n      <Box p={2}>\r\n        <List aria-label='main skills list'>\r\n          {skills.map((skill, index) => (\r\n            <SkillItem\r\n              key={index}\r\n              skill={skill}\r\n              handleButtonPress={handleButtonPress}\r\n              name='skills'\r\n            />\r\n          ))}\r\n        </List>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Skills;\r\n","import React, { useState, useContext, useEffect } from 'react';\r\nimport {\r\n  FormControl,\r\n  TextField,\r\n  InputLabel,\r\n  Select,\r\n  MenuItem,\r\n  FormGroup,\r\n  Button,\r\n  Box,\r\n  Grid,\r\n} from '@material-ui/core';\r\nimport Roles from '../../data/classes';\r\nimport Races from '../../data/races';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport CharacterContext from '../../context/character/characterContext';\r\nimport AbilityScores from './abilities/AbilityScores';\r\nimport Skills from './skills/Skills';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 120,\r\n  },\r\n  selectEmpty: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nconst CharacterDetails = () => {\r\n  const levels = Array.from(new Array(20), (x, i) => i + 1);\r\n  const races = Object.getOwnPropertyNames(Races);\r\n  const [subraces, setSubraces] = useState([]);\r\n\r\n  const classes = useStyles();\r\n\r\n  const characterContext = useContext(CharacterContext);\r\n\r\n  const { addCharacter, current, updateCharacter } = characterContext;\r\n\r\n  useEffect(() => {\r\n    if (current !== null) {\r\n      setChar(current);\r\n    } else {\r\n      setChar({\r\n        name: '',\r\n        race: '',\r\n        subrace: '',\r\n        level: '',\r\n        role: '',\r\n        skills: [\r\n          {\r\n            name: 'Acrobatics',\r\n            proficient: false,\r\n            expert: false,\r\n          },\r\n          {\r\n            name: 'Animal handling',\r\n            proficient: false,\r\n            expert: false,\r\n          },\r\n          {\r\n            name: 'Arcana',\r\n            proficient: false,\r\n            expert: false,\r\n          },\r\n          {\r\n            name: 'Athletics',\r\n            proficient: false,\r\n            expert: false,\r\n          },\r\n          {\r\n            name: 'Deception',\r\n            proficient: false,\r\n            expert: false,\r\n          },\r\n          {\r\n            name: 'History',\r\n            proficient: false,\r\n            expert: false,\r\n          },\r\n          {\r\n            name: 'Insight',\r\n            proficient: false,\r\n            expert: false,\r\n          },\r\n          {\r\n            name: 'Intimidation',\r\n            proficient: false,\r\n            expert: false,\r\n          },\r\n          {\r\n            name: 'Investigation',\r\n            proficient: false,\r\n            expert: false,\r\n          },\r\n          {\r\n            name: 'Medicine',\r\n            proficient: false,\r\n            expert: false,\r\n          },\r\n          {\r\n            name: 'Nature',\r\n            proficient: false,\r\n            expert: false,\r\n          },\r\n          {\r\n            name: 'Perception',\r\n            proficient: false,\r\n            expert: false,\r\n          },\r\n          {\r\n            name: 'Performance',\r\n            proficient: false,\r\n            expert: false,\r\n          },\r\n          {\r\n            name: 'Persuasion',\r\n            proficient: false,\r\n            expert: false,\r\n          },\r\n          {\r\n            name: 'Religion',\r\n            proficient: false,\r\n            expert: false,\r\n          },\r\n          {\r\n            name: 'Sleight of hand',\r\n            proficient: false,\r\n            expert: false,\r\n          },\r\n          {\r\n            name: 'Stealth',\r\n            proficient: false,\r\n            expert: false,\r\n          },\r\n          {\r\n            name: 'Survival',\r\n            proficient: false,\r\n            expert: false,\r\n          },\r\n        ],\r\n        strength: 10,\r\n        dexterity: 10,\r\n        constitution: 10,\r\n        intelligence: 10,\r\n        wisdom: 10,\r\n        charisma: 10,\r\n      });\r\n    }\r\n  }, [characterContext, current]);\r\n\r\n  const [nameInvalid, setNameValid] = useState(false);\r\n  const [raceInvalid, setRaceValid] = useState(false);\r\n  const [levelInvalid, setLevelValid] = useState(false);\r\n  const [roleInvalid, setRoleValid] = useState(false);\r\n\r\n  const [char, setChar] = useState({\r\n    name: '',\r\n    race: '',\r\n    subrace: '',\r\n    level: '',\r\n    role: '',\r\n    skills: [\r\n      {\r\n        name: 'Acrobatics',\r\n        proficient: false,\r\n        expert: false,\r\n      },\r\n      {\r\n        name: 'Animal handling',\r\n        proficient: false,\r\n        expert: false,\r\n      },\r\n      {\r\n        name: 'Arcana',\r\n        proficient: false,\r\n        expert: false,\r\n      },\r\n      {\r\n        name: 'Athletics',\r\n        proficient: false,\r\n        expert: false,\r\n      },\r\n      {\r\n        name: 'Deception',\r\n        proficient: false,\r\n        expert: false,\r\n      },\r\n      {\r\n        name: 'History',\r\n        proficient: false,\r\n        expert: false,\r\n      },\r\n      {\r\n        name: 'Insight',\r\n        proficient: false,\r\n        expert: false,\r\n      },\r\n      {\r\n        name: 'Intimidation',\r\n        proficient: false,\r\n        expert: false,\r\n      },\r\n      {\r\n        name: 'Investigation',\r\n        proficient: false,\r\n        expert: false,\r\n      },\r\n      {\r\n        name: 'Medicine',\r\n        proficient: false,\r\n        expert: false,\r\n      },\r\n      {\r\n        name: 'Nature',\r\n        proficient: false,\r\n        expert: false,\r\n      },\r\n      {\r\n        name: 'Perception',\r\n        proficient: false,\r\n        expert: false,\r\n      },\r\n      {\r\n        name: 'Performance',\r\n        proficient: false,\r\n        expert: false,\r\n      },\r\n      {\r\n        name: 'Persuasion',\r\n        proficient: false,\r\n        expert: false,\r\n      },\r\n      {\r\n        name: 'Religion',\r\n        proficient: false,\r\n        expert: false,\r\n      },\r\n      {\r\n        name: 'Sleight of hand',\r\n        proficient: false,\r\n        expert: false,\r\n      },\r\n      {\r\n        name: 'Stealth',\r\n        proficient: false,\r\n        expert: false,\r\n      },\r\n      {\r\n        name: 'Survival',\r\n        proficient: false,\r\n        expert: false,\r\n      },\r\n    ],\r\n    strength: 10,\r\n    dexterity: 10,\r\n    constitution: 10,\r\n    intelligence: 10,\r\n    wisdom: 10,\r\n    charisma: 10,\r\n  });\r\n\r\n  const { name, race, subrace, level, role, skills } = char;\r\n\r\n  const handleChange = (e) => {\r\n    setChar({ ...char, [e.target.name]: e.target.value });\r\n    console.log(char);\r\n  };\r\n\r\n  const handleRaceChange = (e) => {\r\n    setSubraces(Races[e.target.value]);\r\n    setChar({ ...char, race: e.target.value, subrace: '' });\r\n  };\r\n\r\n  const handleValidation = () => {\r\n    setNameValid(name === '');\r\n    setRaceValid(race === '');\r\n    setLevelValid(level === '');\r\n    setRoleValid(role === '');\r\n  };\r\n\r\n  const handleButtonPress = (e) => {\r\n    // For changing skills on a player\r\n    const skillToAdd = e.target.innerText;\r\n    checkSkills(skillToAdd);\r\n  };\r\n\r\n  const checkSkills = (skill) => {\r\n    let newSkills = skills;\r\n    let indexOfSkill;\r\n    const currentSkill = newSkills.filter((sk, index) => {\r\n      if (sk.name === skill) {\r\n        indexOfSkill = index;\r\n      }\r\n      return sk.name === skill;\r\n    })[0];\r\n\r\n    if (!currentSkill.proficient && !currentSkill.expert) {\r\n      newSkills[indexOfSkill].proficient = true;\r\n    } else if (currentSkill.proficient) {\r\n      newSkills[indexOfSkill].expert = true;\r\n      newSkills[indexOfSkill].proficient = false;\r\n    } else {\r\n      newSkills[indexOfSkill].expert = false;\r\n    }\r\n\r\n    setChar({ ...char, skills: newSkills });\r\n    console.log(char);\r\n  };\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    handleValidation();\r\n    if (!(name === '' || level === '' || role === '' || race === '')) {\r\n      if (current === null) {\r\n        addCharacter(char);\r\n      } else {\r\n        updateCharacter(char);\r\n      }\r\n    }\r\n    setChar({\r\n      name: '',\r\n      race: '',\r\n      subrace: '',\r\n      level: '',\r\n      role: '',\r\n      skills: [\r\n        {\r\n          name: 'Acrobatics',\r\n          proficient: false,\r\n          expert: false,\r\n        },\r\n        {\r\n          name: 'Animal handling',\r\n          proficient: false,\r\n          expert: false,\r\n        },\r\n        {\r\n          name: 'Arcana',\r\n          proficient: false,\r\n          expert: false,\r\n        },\r\n        {\r\n          name: 'Athletics',\r\n          proficient: false,\r\n          expert: false,\r\n        },\r\n        {\r\n          name: 'Deception',\r\n          proficient: false,\r\n          expert: false,\r\n        },\r\n        {\r\n          name: 'History',\r\n          proficient: false,\r\n          expert: false,\r\n        },\r\n        {\r\n          name: 'Insight',\r\n          proficient: false,\r\n          expert: false,\r\n        },\r\n        {\r\n          name: 'Intimidation',\r\n          proficient: false,\r\n          expert: false,\r\n        },\r\n        {\r\n          name: 'Investigation',\r\n          proficient: false,\r\n          expert: false,\r\n        },\r\n        {\r\n          name: 'Medicine',\r\n          proficient: false,\r\n          expert: false,\r\n        },\r\n        {\r\n          name: 'Nature',\r\n          proficient: false,\r\n          expert: false,\r\n        },\r\n        {\r\n          name: 'Perception',\r\n          proficient: false,\r\n          expert: false,\r\n        },\r\n        {\r\n          name: 'Performance',\r\n          proficient: false,\r\n          expert: false,\r\n        },\r\n        {\r\n          name: 'Persuasion',\r\n          proficient: false,\r\n          expert: false,\r\n        },\r\n        {\r\n          name: 'Religion',\r\n          proficient: false,\r\n          expert: false,\r\n        },\r\n        {\r\n          name: 'Sleight of hand',\r\n          proficient: false,\r\n          expert: false,\r\n        },\r\n        {\r\n          name: 'Stealth',\r\n          proficient: false,\r\n          expert: false,\r\n        },\r\n        {\r\n          name: 'Survival',\r\n          proficient: false,\r\n          expert: false,\r\n        },\r\n      ],\r\n      strength: 10,\r\n      dexterity: 10,\r\n      constitution: 10,\r\n      intelligence: 10,\r\n      wisdom: 10,\r\n      charisma: 10,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Box p={2}>\r\n      <Grid container spacing={1}>\r\n        <Grid item xs={12} md={2}>\r\n          <FormGroup>\r\n            <FormControl className={classes.formControl}>\r\n              <TextField\r\n                required\r\n                error={nameInvalid}\r\n                id='name'\r\n                name='name'\r\n                label='Name'\r\n                onChange={handleChange}\r\n                value={name}\r\n              />\r\n            </FormControl>\r\n\r\n            <FormControl className={classes.formControl} error={raceInvalid}>\r\n              <InputLabel id='race-select-label'>Race</InputLabel>\r\n              <Select\r\n                required\r\n                labelId='race-select-label'\r\n                id='race-select'\r\n                name='race'\r\n                value={race}\r\n                onChange={handleRaceChange}\r\n              >\r\n                {races.map((race, index) => {\r\n                  return (\r\n                    <MenuItem key={index} value={race}>\r\n                      {race}\r\n                    </MenuItem>\r\n                  );\r\n                })}\r\n              </Select>\r\n            </FormControl>\r\n            {subraces.length > 0 && (\r\n              <FormControl className={classes.formControl}>\r\n                <InputLabel id='subrace-select-label'>Subrace</InputLabel>\r\n                <Select\r\n                  required\r\n                  labelId='subrace-select-label'\r\n                  id='subrace-select'\r\n                  name='subrace'\r\n                  value={subrace}\r\n                  onChange={handleChange}\r\n                >\r\n                  {subraces.map((subrace, index) => {\r\n                    return (\r\n                      <MenuItem key={index} value={subrace}>\r\n                        {subrace}\r\n                      </MenuItem>\r\n                    );\r\n                  })}\r\n                </Select>\r\n              </FormControl>\r\n            )}\r\n\r\n            <FormControl className={classes.formControl} error={levelInvalid}>\r\n              <InputLabel id='level-select-label'>Level</InputLabel>\r\n              <Select\r\n                required\r\n                labelId='level-select-label'\r\n                id='level-select'\r\n                name='level'\r\n                value={level}\r\n                onChange={handleChange}\r\n              >\r\n                {levels.map((level, index) => {\r\n                  return (\r\n                    <MenuItem key={index} value={level}>\r\n                      {level}\r\n                    </MenuItem>\r\n                  );\r\n                })}\r\n              </Select>\r\n            </FormControl>\r\n            <FormControl className={classes.formControl} error={roleInvalid}>\r\n              <InputLabel id='role-select-label'>Class</InputLabel>\r\n              <Select\r\n                required\r\n                labelId='role-select-label'\r\n                id='role-select'\r\n                name='role'\r\n                value={role}\r\n                onChange={handleChange}\r\n              >\r\n                {Roles.map((role, index) => {\r\n                  return (\r\n                    <MenuItem key={index} value={role}>\r\n                      {role}\r\n                    </MenuItem>\r\n                  );\r\n                })}\r\n              </Select>\r\n            </FormControl>\r\n\r\n            <Button variant='contained' onClick={onSubmit}>\r\n              {current ? 'Save Edits' : 'Create New'}\r\n            </Button>\r\n          </FormGroup>\r\n        </Grid>\r\n        <Grid item xs={12} md={1}>\r\n          <AbilityScores\r\n            handleChange={handleChange}\r\n            character={char}\r\n            levels={levels}\r\n            classes={classes}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} md={2}>\r\n          <Skills character={char} handleButtonPress={handleButtonPress} />\r\n        </Grid>\r\n      </Grid>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default CharacterDetails;\r\n","import React, { Fragment, useContext, useState } from 'react';\r\nimport CharacterContext from '../../context/character/characterContext';\r\nimport CharacterItem from './CharacterItem';\r\nimport {\r\n  AppBar,\r\n  Tabs,\r\n  Tab,\r\n  Box,\r\n  Typography,\r\n  makeStyles,\r\n} from '@material-ui/core';\r\nimport PropTypes from 'prop-types';\r\nimport CharacterDetails from '../characterDetails/CharacterDetails';\r\n\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <div\r\n      role='tabpanel'\r\n      hidden={value !== index}\r\n      id={`nav-tabpanel-${index}`}\r\n      aria-labelledby={`nav-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && (\r\n        <Box p={3}>\r\n          <Typography component={'span'}>{children}</Typography>\r\n        </Box>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n  children: PropTypes.node,\r\n  index: PropTypes.any.isRequired,\r\n  value: PropTypes.any.isRequired,\r\n};\r\n\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `nav-tab-${index}`,\r\n    'aria-controls': `nav-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    backgroundColor: '#b0bec5',\r\n  },\r\n});\r\n\r\nconst Characters = () => {\r\n  const classes = useStyles();\r\n  const characterContext = useContext(CharacterContext);\r\n  const [value, setValue] = useState(1);\r\n\r\n  const { characters, clearCurrent, current } = characterContext;\r\n\r\n  const handleChange = (e, newValue) => {\r\n    if (newValue > countOfCharacters) {\r\n      clearCurrent();\r\n    }\r\n    setValue(newValue);\r\n  };\r\n\r\n  const countOfCharacters = Object.entries(characters).length;\r\n\r\n  return (\r\n    <Fragment>\r\n      <AppBar position='static' color='inherit' className={classes.root}>\r\n        <Tabs\r\n          onChange={handleChange}\r\n          aria-label='character names'\r\n          value={value}\r\n          variant='scrollable'\r\n          scrollButtons='auto'\r\n        >\r\n          {characters.map((character, index) => (\r\n            <Tab\r\n              key={character.id}\r\n              value={index + 1}\r\n              label={character.name}\r\n              {...a11yProps(index)}\r\n            />\r\n          ))}\r\n          <Tab value={countOfCharacters + 1} label='Add Character' />\r\n        </Tabs>\r\n      </AppBar>\r\n      {characters.map((character, index) => (\r\n        <TabPanel value={value} index={index + 1} key={character.id}>\r\n          <CharacterItem character={character} key={character.id} />\r\n          <CharacterDetails />\r\n        </TabPanel>\r\n      ))}\r\n      {current === null ? (\r\n        <TabPanel index={countOfCharacters + 1} value={value}>\r\n          <Box fontSize='h5.fontSize'>Add Character</Box>\r\n          <CharacterDetails />\r\n        </TabPanel>\r\n      ) : null}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Characters;\r\n","import React from 'react';\r\nimport Characters from '../characters/Characters';\r\n\r\nconst Character = () => {\r\n  return (\r\n    <div>\r\n      <Characters />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Character;\r\n","import React from 'react';\r\n\r\nconst CheatSheet = () => {\r\n  return (\r\n    <div>\r\n      <h1>Cheat Sheet</h1>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CheatSheet;\r\n","import {\r\n  ADD_CHARACTER,\r\n  SET_CURRENT,\r\n  CLEAR_CURRENT,\r\n  UPDATE_CHARACTER,\r\n  DELETE_CHARACTER,\r\n} from '../types';\r\n\r\nexport default (state, action) => {\r\n  switch (action.type) {\r\n    case ADD_CHARACTER:\r\n      return {\r\n        ...state,\r\n        characters: [...state.characters, action.payload],\r\n      };\r\n    case UPDATE_CHARACTER:\r\n      return {\r\n        ...state,\r\n        characters: state.characters.map((character) =>\r\n          character.id === action.payload.id ? action.payload : character\r\n        ),\r\n      };\r\n    case DELETE_CHARACTER:\r\n      return {\r\n        ...state,\r\n        characters: state.characters.filter(\r\n          (character) => character.id !== action.payload\r\n        ),\r\n      };\r\n    case SET_CURRENT:\r\n      return { ...state, current: action.payload };\r\n    case CLEAR_CURRENT:\r\n      return { ...state, current: null };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","export const ADD_CHARACTER = 'ADD_CHARACTER';\r\nexport const SET_CURRENT = 'SET_CURRENT';\r\nexport const CLEAR_CURRENT = 'CLEAR_CURRENT';\r\nexport const UPDATE_CHARACTER = 'UPDATE_CHARACTER';\r\nexport const DELETE_CHARACTER = 'DELETE_CHARACTER';\r\nexport const SET_ALERT = 'SET_ALERT';\r\nexport const REMOVE_ALERT = 'REMOVE_ALERT';\r\n","import React, { useReducer } from 'react';\r\nimport CharacterContext from './characterContext';\r\nimport characterReducer from './characterReducer';\r\nimport {\r\n  ADD_CHARACTER,\r\n  SET_CURRENT,\r\n  CLEAR_CURRENT,\r\n  UPDATE_CHARACTER,\r\n  DELETE_CHARACTER,\r\n} from '../types';\r\nimport { uuid } from 'uuidv4';\r\n\r\nconst CharacterState = (props) => {\r\n  const initialState = {\r\n    characters: [\r\n      {\r\n        id: 1,\r\n        name: 'Player 1',\r\n        race: 'Dwarf',\r\n        subrace: 'Hill dwarf',\r\n        level: 2,\r\n        role: 'Fighter',\r\n        skills: [\r\n          {\r\n            name: 'Acrobatics',\r\n            proficient: true,\r\n            expert: false,\r\n          },\r\n          {\r\n            name: 'Animal handling',\r\n            proficient: false,\r\n            expert: false,\r\n          },\r\n          {\r\n            name: 'Arcana',\r\n            proficient: false,\r\n            expert: false,\r\n          },\r\n          {\r\n            name: 'Athletics',\r\n            proficient: true,\r\n            expert: false,\r\n          },\r\n          {\r\n            name: 'Deception',\r\n            proficient: false,\r\n            expert: false,\r\n          },\r\n          {\r\n            name: 'History',\r\n            proficient: false,\r\n            expert: false,\r\n          },\r\n          {\r\n            name: 'Insight',\r\n            proficient: false,\r\n            expert: false,\r\n          },\r\n          {\r\n            name: 'Intimidation',\r\n            proficient: false,\r\n            expert: false,\r\n          },\r\n          {\r\n            name: 'Investigation',\r\n            proficient: false,\r\n            expert: false,\r\n          },\r\n          {\r\n            name: 'Medicine',\r\n            proficient: false,\r\n            expert: false,\r\n          },\r\n          {\r\n            name: 'Nature',\r\n            proficient: false,\r\n            expert: false,\r\n          },\r\n          {\r\n            name: 'Perception',\r\n            proficient: false,\r\n            expert: false,\r\n          },\r\n          {\r\n            name: 'Performance',\r\n            proficient: false,\r\n            expert: false,\r\n          },\r\n          {\r\n            name: 'Persuasion',\r\n            proficient: false,\r\n            expert: false,\r\n          },\r\n          {\r\n            name: 'Religion',\r\n            proficient: false,\r\n            expert: false,\r\n          },\r\n          {\r\n            name: 'Sleight of hand',\r\n            proficient: false,\r\n            expert: false,\r\n          },\r\n          {\r\n            name: 'Stealth',\r\n            proficient: false,\r\n            expert: false,\r\n          },\r\n          {\r\n            name: 'Survival',\r\n            proficient: false,\r\n            expert: false,\r\n          },\r\n        ],\r\n        strength: 10,\r\n        dexterity: 10,\r\n        constitution: 10,\r\n        intelligence: 10,\r\n        wisdom: 10,\r\n        charisma: 10,\r\n      },\r\n      {\r\n        id: 2,\r\n        name: 'Player 2',\r\n        race: 'Gnome',\r\n        subrace: 'Rock gnome',\r\n        level: 3,\r\n        role: 'Ranger',\r\n        skills: [\r\n          {\r\n            name: 'Acrobatics',\r\n            proficient: false,\r\n            expert: false,\r\n          },\r\n          {\r\n            name: 'Animal handling',\r\n            proficient: true,\r\n            expert: false,\r\n          },\r\n          {\r\n            name: 'Arcana',\r\n            proficient: false,\r\n            expert: false,\r\n          },\r\n          {\r\n            name: 'Athletics',\r\n            proficient: false,\r\n            expert: false,\r\n          },\r\n          {\r\n            name: 'Deception',\r\n            proficient: false,\r\n            expert: false,\r\n          },\r\n          {\r\n            name: 'History',\r\n            proficient: false,\r\n            expert: false,\r\n          },\r\n          {\r\n            name: 'Insight',\r\n            proficient: false,\r\n            expert: false,\r\n          },\r\n          {\r\n            name: 'Intimidation',\r\n            proficient: false,\r\n            expert: false,\r\n          },\r\n          {\r\n            name: 'Investigation',\r\n            proficient: false,\r\n            expert: false,\r\n          },\r\n          {\r\n            name: 'Medicine',\r\n            proficient: false,\r\n            expert: false,\r\n          },\r\n          {\r\n            name: 'Nature',\r\n            proficient: false,\r\n            expert: false,\r\n          },\r\n          {\r\n            name: 'Perception',\r\n            proficient: true,\r\n            expert: false,\r\n          },\r\n          {\r\n            name: 'Performance',\r\n            proficient: false,\r\n            expert: false,\r\n          },\r\n          {\r\n            name: 'Persuasion',\r\n            proficient: false,\r\n            expert: false,\r\n          },\r\n          {\r\n            name: 'Religion',\r\n            proficient: false,\r\n            expert: false,\r\n          },\r\n          {\r\n            name: 'Sleight of hand',\r\n            proficient: false,\r\n            expert: false,\r\n          },\r\n          {\r\n            name: 'Stealth',\r\n            proficient: false,\r\n            expert: false,\r\n          },\r\n          {\r\n            name: 'Survival',\r\n            proficient: false,\r\n            expert: false,\r\n          },\r\n        ],\r\n        strength: 10,\r\n        dexterity: 10,\r\n        constitution: 10,\r\n        intelligence: 10,\r\n        wisdom: 10,\r\n        charisma: 10,\r\n      },\r\n      {\r\n        id: 3,\r\n        name: 'Player 3',\r\n        race: 'Elf',\r\n        subrace: 'Wood elf',\r\n        level: 2,\r\n        role: 'Druid',\r\n        skills: [\r\n          {\r\n            name: 'Acrobatics',\r\n            proficient: false,\r\n            expert: false,\r\n          },\r\n          {\r\n            name: 'Animal handling',\r\n            proficient: false,\r\n            expert: false,\r\n          },\r\n          {\r\n            name: 'Arcana',\r\n            proficient: true,\r\n            expert: false,\r\n          },\r\n          {\r\n            name: 'Athletics',\r\n            proficient: false,\r\n            expert: false,\r\n          },\r\n          {\r\n            name: 'Deception',\r\n            proficient: false,\r\n            expert: false,\r\n          },\r\n          {\r\n            name: 'History',\r\n            proficient: false,\r\n            expert: false,\r\n          },\r\n          {\r\n            name: 'Insight',\r\n            proficient: false,\r\n            expert: false,\r\n          },\r\n          {\r\n            name: 'Intimidation',\r\n            proficient: false,\r\n            expert: false,\r\n          },\r\n          {\r\n            name: 'Investigation',\r\n            proficient: false,\r\n            expert: false,\r\n          },\r\n          {\r\n            name: 'Medicine',\r\n            proficient: true,\r\n            expert: false,\r\n          },\r\n          {\r\n            name: 'Nature',\r\n            proficient: false,\r\n            expert: false,\r\n          },\r\n          {\r\n            name: 'Perception',\r\n            proficient: false,\r\n            expert: false,\r\n          },\r\n          {\r\n            name: 'Performance',\r\n            proficient: false,\r\n            expert: false,\r\n          },\r\n          {\r\n            name: 'Persuasion',\r\n            proficient: false,\r\n            expert: false,\r\n          },\r\n          {\r\n            name: 'Religion',\r\n            proficient: false,\r\n            expert: false,\r\n          },\r\n          {\r\n            name: 'Sleight of hand',\r\n            proficient: false,\r\n            expert: false,\r\n          },\r\n          {\r\n            name: 'Stealth',\r\n            proficient: false,\r\n            expert: false,\r\n          },\r\n          {\r\n            name: 'Survival',\r\n            proficient: false,\r\n            expert: false,\r\n          },\r\n        ],\r\n        strength: 10,\r\n        dexterity: 10,\r\n        constitution: 10,\r\n        intelligence: 10,\r\n        wisdom: 10,\r\n        charisma: 10,\r\n      },\r\n    ],\r\n    current: null,\r\n  };\r\n\r\n  const [state, dispatch] = useReducer(characterReducer, initialState);\r\n\r\n  // Add Character\r\n  const addCharacter = (character) => {\r\n    character.id = uuid();\r\n    dispatch({ type: ADD_CHARACTER, payload: character });\r\n  };\r\n\r\n  // Set Current Character\r\n  const setCurrent = (character) => {\r\n    dispatch({ type: SET_CURRENT, payload: character });\r\n  };\r\n\r\n  // Clear Current Character\r\n  const clearCurrent = () => {\r\n    dispatch({ type: CLEAR_CURRENT });\r\n  };\r\n\r\n  // Update Current Character\r\n  const updateCharacter = (character) => {\r\n    dispatch({ type: UPDATE_CHARACTER, payload: character });\r\n  };\r\n\r\n  // Delete Current Character\r\n  const deleteCharacter = (id) => {\r\n    dispatch({ type: DELETE_CHARACTER, payload: id });\r\n  };\r\n\r\n  return (\r\n    <CharacterContext.Provider\r\n      value={{\r\n        characters: state.characters,\r\n        current: state.current,\r\n        addCharacter,\r\n        updateCharacter,\r\n        deleteCharacter,\r\n        setCurrent,\r\n        clearCurrent,\r\n      }}\r\n    >\r\n      {props.children}\r\n    </CharacterContext.Provider>\r\n  );\r\n};\r\n\r\nexport default CharacterState;\r\n","import React, { Fragment, useEffect } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport Navbar from './components/layout/Navbar';\nimport Home from './components/pages/Home';\nimport Character from './components/pages/Character';\nimport CheatSheet from './components/pages/CheatSheet';\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core';\nimport { blueGrey, orange } from '@material-ui/core/colors/';\n\nimport CharacterState from './context/character/CharacterState';\n\nimport './App.css';\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: blueGrey,\n    secondary: orange,\n  },\n});\n\nconst App = () => {\n  useEffect(() => {});\n\n  return (\n    <ThemeProvider theme={theme}>\n      <CharacterState>\n        <Router>\n          <Fragment>\n            <Navbar />\n            <div className='row'>\n              <Switch>\n                <Route exact path='/' component={Home} />\n                <Route exact path='/character' component={Character} />\n                <Route exact path='/cheatSheet' component={CheatSheet} />\n              </Switch>\n            </div>\n          </Fragment>\n        </Router>\n      </CharacterState>\n    </ThemeProvider>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}